<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[atomic-penguin's blog]]></title>
  <link href="http://atomic-penguin.github.com/atom.xml" rel="self"/>
  <link href="http://atomic-penguin.github.com/"/>
  <updated>2014-01-09T11:23:13-05:00</updated>
  <id>http://atomic-penguin.github.com/</id>
  <author>
    <name><![CDATA[Eric G. Wolfe]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Mini HOWTO - VMWare MAC address change on RHEL]]></title>
    <link href="http://atomic-penguin.github.com/blog/2013/10/14/Mini-HOWTO-VMWare-MAC-address-change-on-RHEL/"/>
    <updated>2013-10-14T14:15:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2013/10/14/Mini-HOWTO-VMWare-MAC-address-change-on-RHEL</id>
    <content type="html"><![CDATA[<p>If you move a Virtual Machine to a different cluster in VMware, the MAC address may change.
This is a fairly easy fix, if you know where to look.</p>

<!-- more -->


<h2>1. UDEV</h2>

<p>Look for a &#8220;persistent net&#8221; rule in udev.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@mudns ~<span class="o">]</span><span class="c"># ls /etc/udev/rules.d/</span>
</span><span class='line'>60-fprint-autosuspend.rules  60-pcmcia.rules  60-raw.rules
</span><span class='line'>70-persistent-cd.rules  70-persistent-net.rules  90-alsa.rules  90-hal.rules
</span><span class='line'>98-kexec.rules  99-vmware-scsi-udev.rules
</span></code></pre></td></tr></table></div></figure>


<p>Edit the &#8220;persistent net&#8221; rule.  Comment out the old rule with a <code>#</code>,
and change <code>eth1</code> to eth0` on the new rule when the MAC has changed.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@mudns ~<span class="o">]</span><span class="c"># vim /etc/udev/rules.d/70-persistent-net.rules</span>
</span><span class='line'><span class="c"># This file was automatically generated by the /lib/udev/write_net_rules</span>
</span><span class='line'><span class="c"># program, run by the persistent-net-generator.rules rules file.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># You can modify it, as long as you keep each rule on a single</span>
</span><span class='line'><span class="c"># line, and change only the value of the NAME= key.</span>
</span><span class='line'>
</span><span class='line'><span class="c"># PCI device 0x15ad:0x07b0 (vmxnet3) (custom name provided by external tool)</span>
</span><span class='line'><span class="c">#SUBSYSTEM==&quot;net&quot;, ACTION==&quot;add&quot;, DRIVERS==&quot;?*&quot;, ATTR{address}==&quot;00:0c:29:aa:bb:cc&quot;, ATTR{type}==&quot;1&quot;, KERNEL==&quot;eth*&quot;, NAME=&quot;eth0&quot;</span>
</span><span class='line'>
</span><span class='line'><span class="c"># PCI device 0x15ad:0x07b0 (vmxnet3)</span>
</span><span class='line'><span class="nv">SUBSYSTEM</span><span class="o">==</span><span class="s2">&quot;net&quot;</span>, <span class="nv">ACTION</span><span class="o">==</span><span class="s2">&quot;add&quot;</span>, <span class="nv">DRIVERS</span><span class="o">==</span><span class="s2">&quot;?*&quot;</span>, ATTR<span class="o">{</span>address<span class="o">}==</span><span class="s2">&quot;00:0c:29:cc:dd:ee&quot;</span>, ATTR<span class="o">{</span><span class="nb">type</span><span class="o">}==</span><span class="s2">&quot;1&quot;</span>, <span class="nv">KERNEL</span><span class="o">==</span><span class="s2">&quot;eth*&quot;</span>, <span class="nv">NAME</span><span class="o">=</span><span class="s2">&quot;eth0&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h2>2. Network Script</h2>

<p>Edit the ifcfg-eth0 network script, and change the HWADDR line</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@mudns ~<span class="o">]</span><span class="c"># vim /etc/sysconfig/network-scripts/ifcfg-eth0 </span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span>eth0
</span><span class='line'><span class="c">#HWADDR=&quot;00:0C:29:AA:BB:CC&quot;</span>
</span><span class='line'><span class="nv">HWADDR</span><span class="o">=</span><span class="s2">&quot;00:0C:29:CC:DD:EE&quot;</span>
</span><span class='line'><span class="nv">ONBOOT</span><span class="o">=</span>yes
</span><span class='line'><span class="nv">BOOTPROTO</span><span class="o">=</span>static
</span><span class='line'><span class="nv">NETMASK</span><span class="o">=</span>255.255.255.0
</span><span class='line'><span class="nv">IPADDR</span><span class="o">=</span>192.0.2.24
</span><span class='line'><span class="nv">GATEWAY</span><span class="o">=</span>192.0.2.1
</span><span class='line'><span class="nv">IPV6INIT</span><span class="o">=</span><span class="s2">&quot;yes&quot;</span>
</span><span class='line'><span class="nv">IPV6ADDR</span><span class="o">=</span><span class="s2">&quot;2001:DB8::224/32&quot;</span>
</span><span class='line'><span class="nv">IPV6_DEFAULTGW</span><span class="o">=</span><span class="s2">&quot;2001:DB8::1&quot;</span>
</span><span class='line'><span class="nv">IPV6_AUTOCONF</span><span class="o">=</span><span class="s2">&quot;no&quot;</span>
</span><span class='line'><span class="nv">Type</span><span class="o">=</span>Ethernet
</span></code></pre></td></tr></table></div></figure>


<h2>3. Reboot</h2>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="o">[</span>root@mudns ~<span class="o">]</span><span class="c"># shutdown -r now</span>
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[TIL: system generated errata list and patch changelog with yum]]></title>
    <link href="http://atomic-penguin.github.com/blog/2013/08/15/til-system-generated-cve-and-changelog-with-yum/"/>
    <updated>2013-08-15T15:01:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2013/08/15/til-system-generated-cve-and-changelog-with-yum</id>
    <content type="html"><![CDATA[<p>I was looking for a way to create a system generated CVE, or errata,
list for a production change request today.  I recall this being
easier on RHN (Red Hat Network) portal, in the past.  That has changed
so much, I don&#8217;t even know where to look, and apparently cannot list
more than 10 errata issues per-page.</p>

<!-- more -->


<p>So as I searched for a way to generate this report, I came across
two yum plugins I have overlooked in the past.  The <code>yum-security</code>
and <code>yum-changelog</code> plugins.  Assuming you have a change request process
involving two identical servers, <code>test</code> and <code>production</code> you can use these two
plugins to generate change request documentation.</p>

<p>The <code>yum-security</code> plugin will generate a compact list of RedHat Bug/Security IDs,
or even long-format issue reports, applicable to your production machine.</p>

<p>The <code>yum-changelog</code> plugin can generate a list of what issues were just patched on
the test machine, and be submitted as part of the chnage request documentation
for the production machine.  The <code>yum-changelog</code> plugin needs the package
<code>python-dateutil</code> for full functionality.</p>

<h2>Install plugins</h2>

<pre><code>yum -y install yum-security yum-changelogi python-dateutil
</code></pre>

<h3>Generate an errata list, or display issue reports.</h3>

<p>Run <code>yum list-sec</code> to generate a short-format errata list.  Some
third party packages may not be included in the list as they are probably
lacking necessary metadata.</p>

<pre><code>[root@production]# yum list-sec
RHBA-2013:1040 bugfix   bash-3.2-32.el5_9.1.i386
RHSA-2013:0983 security curl-7.15.5-17.el5_9.i386
FEDORA-EPEL-2013-10647 bugfix   dkms-2.2.0.3-8.el5.noarch
FEDORA-EPEL-2013-10952 bugfix   dkms-2.2.0.3-14.el5.noarch
RHSA-2013:0981 security firefox-17.0.7-1.el5_9.i386
RHSA-2013:1140 security firefox-17.0.8-1.el5_9.i386
RHBA-2013:1039 bugfix   gnome-vfs2-2.16.2-12.el5_9.i386
RHBA-2013:1039 bugfix   gnome-vfs2-smb-2.16.2-12.el5_9.i386
RHSA-2013:1014 security java-1.6.0-openjdk-1:1.6.0.0-1.41.1.11.11.90.el5_9.i386
RHSA-2013:1014 security java-1.6.0-openjdk-devel-1:1.6.0.0-1.41.1.11.11.90.el5_9.i386
RHBA-2013:1123 bugfix   libxml2-2.6.26-2.1.21.el5_9.3.i386
RHBA-2013:1123 bugfix   libxml2-devel-2.6.26-2.1.21.el5_9.3.i386
RHBA-2013:1123 bugfix   libxml2-python-2.6.26-2.1.21.el5_9.3.i386
RHSA-2013:1135 security nspr-4.9.5-1.el5_9.i386
RHSA-2013:1135 security nss-3.14.3-6.el5_9.i386
RHSA-2013:1135 security nss-tools-3.14.3-6.el5_9.i386
RHBA-2013:1128 bugfix   poppler-0.5.4-19.el5_9.2.i386
RHBA-2013:1128 bugfix   poppler-utils-0.5.4-19.el5_9.2.i386
RHSA-2013:1121 security sos-1.7-9.62.el5_9.1.noarch
RHBA-2013:1091 bugfix   sqlite-3.3.6-7.i386
RHEA-2013:1025 enhancement tzdata-2013c-2.el5.i386
RHEA-2013:1025 enhancement tzdata-java-2013c-2.el5.i386
RHSA-2013:0981 security xulrunner-17.0.7-1.el5_9.i386
RHSA-2013:1140 security xulrunner-17.0.8-3.el5_9.i386
list-sec done
</code></pre>

<p>Run <code>yum info-security</code> to generate a long-format issue report.
Here is a truncated output example.</p>

<pre><code>[root@production]# yum info-security
===============================================================================
bash bug fix update
===============================================================================
  Update ID : RHBA-2013:1040
    Release : 
       Type : bugfix
     Status : final
     Issued : 2013-07-10 00:00:00
    Summary : Updated bash packages that fix one bug are now available for Red
            : Hat Enterprise Linux 5.
Description : The GNU Bourne Again shell (Bash) is a shell and command
            : language interpreter compatible with the Bourne
            : shell (sh). Bash is the default shell for Red Hat
            : Enterprise Linux.
            : 
            : This update fixes the following bug:
            : 
            : * When a trap handler was invoked while running
            :   another trap handler, which was invoked during a
            :   pipeline call, bash was unresponsive. With this
            :   update, pipeline calls are saved and
            :   subsequently restored in this scenario, and bash
            :   responds normally. (BZ#978840)
            : 
            : Users of bash are advised to upgrade to these
            : updated packages, which fix this bug.
   Solution : Before applying this update, make sure all previously-released
            : errata relevant to your system have been applied.
            : 
            : This update is available via the Red Hat Network.
            : Details on how to use the Red Hat Network to apply
            : this update are available at
            : https://access.redhat.com/site/articles/11258
     Rights : Copyright 2013 Red Hat Inc
</code></pre>

<h3>Generate a changelog after patching the test system.</h3>

<p>According to my <code>/var/log/yum.log</code> let us say I last patched this
system on 2013-7-18.  I would generate a changelog of installed patches on
the test machine since that date, as follows.</p>

<pre><code>[root@test]# yum -y upgrade
...
[root@test]# yum changelog 2013-7-18 installed
Listing changelogs since 2013-07-18

==================== Installed Packages ====================
libxml2-2.6.26-2.1.21.el5_9.3.i386       installed
* Tue Jul 23 18:00:00 2013 Daniel Veillard - 2.6.26-2.1.21.el5_9.3
- fixed one regexp bug and added a (rhbz#987321)
- Another small change on the algorithm for the elimination of epsilon (rhbz#987321)

poppler-0.5.4-19.el5_9.2.i386            installed
* Tue Jul 30 18:00:00 2013 Marek Kasik - 0.5.4-19.el5_9.2
- Initialize variables correctly before their use
- Resolves: #990097
* Tue Jul 30 18:00:00 2013 Marek Kasik - 0.5.4-19.el5_9.1
- Decode encoded streams before using them
- Resolves: #990096

nss-3.14.3-6.el5_9.i386                  installed
* Tue Jul 23 18:00:00 2013 Elio Maldonado - 3.14.3-6
- Resolves: rhbz#986969 - nssutil_ReadSecmodDB() leaks memory

firefox-17.0.8-1.el5_9.i386              installed
* Wed Jul 31 18:00:00 2013 Martin Stransky - 17.0.8-1
- Update to 17.0.8 ESR

dkms-2.2.0.3-14.el5.noarch               installed
* Mon Jul 22 08:00:00 2013 Simone Caronni - 2.2.0.3-14
- Remove systemd / SysV conversion as per new packaging guidelines.
- Add patch for #986887 to force tarball creation.
* Mon Jul 22 08:00:00 2013 Simone Caronni - 2.2.0.3-13
- Add fix for #986887; do not use lib64 for storing data as it was in 2.2.0.3-5.
* Sun Jul 21 08:00:00 2013 Simone Caronni - 2.2.0.3-12
- Add patch for #986557.

xulrunner-17.0.8-3.el5_9.i386            installed
* Tue Aug  6 18:00:00 2013 Martin Stransky - 17.0.8-3
- Update to 17.0.8 ESR Build 2
- Disable strict aliasing - mozbz#821502
* Thu Aug  1 18:00:00 2013 Martin Stransky - 17.0.8-2
- Added fix for rhbz#990921 - firefox does not build with.
  required nss/nspr
* Wed Jul 31 18:00:00 2013 Martin Stransky - 17.0.8-1
- Update to 17.0.8 ESR

sos-1.7-9.62.el5_9.1.noarch              installed
* Mon Jul 22 18:00:00 2013 Bryn M. Reeves - 1.7-9.62.el5_9.1
- Remove anaconda-ks.cfg collection from general plug-in
- Resolves: bz965807

changelog stats. 951 pkgs, 947 source pkgs, 12 changelogs
</code></pre>

<h3>Conclusion</h3>

<p>Even if you do <em>not</em> work in an environment with strict change control procedures.
The <code>yum-security</code> plugin can be helpful to see what known bugs and security issues exist in your RHEL
environment.  While the <code>yum-changelog</code> also allows you to thoroughly examine what changes
you just made to your system.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HOWTO test-kitchen and encrypted data bags]]></title>
    <link href="http://atomic-penguin.github.com/blog/2013/06/07/HOWTO-test-kitchen-and-encrypted-data-bags/"/>
    <updated>2013-06-07T15:58:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2013/06/07/HOWTO-test-kitchen-and-encrypted-data-bags</id>
    <content type="html"><![CDATA[<p>I have been playing around with <a href="https://github.com/opscode/test-kitchen">test-kitchen</a>
more recently.  One of the community members suggested I embed an encrypted data_bag
into the certificates cookbook for integration testing with test-kitchen.</p>

<p>Following, is the process used to set up test-kitchen for encrypted data_bag
use.  This documentation might be useful to others trying to integrate encrypted
data_bag testing into their cookbooks.</p>

<!-- more -->


<h3>Warning</h3>

<p>Encrypted data_bag files placed in <code>test/integration</code> should not be used in production.
Files include a self-signed &#8220;snake oil&#8221; certificate/key and an encrypted_data_bag_secret file
which are not secure to use beyond testing purposes.</p>

<h3>Initialize test-kitchen</h3>

<p>Run the following to create a <code>.kitchen.yml</code> file in your cookbook directory.</p>

<pre><code>$ cd &lt;cookbook dir&gt;
$ kitchen init
</code></pre>

<p>This <code>kitchen init</code> command will yield a file which looks like this:</p>

<pre><code>---
driver_plugin: vagrant
driver_config:
  require_chef_omnibus: latest 

platforms:
- name: ubuntu-12.04
- name: ubuntu-10.04
- name: centos-6.4
- name: centos-5.9

suites:
- name: default
  run_list: ["recipe[certificate::default]"]                                                                                                                                    
  attributes: {}
</code></pre>

<h3>Data bag and secret file setup</h3>

<p>The test-kitchen initialization should create a <code>test/integration/default</code> directory.
As of test-kitchen pull request #124, cookbook files are aggressively filtered from being
copied to the chef-solo working directory.  Adding these files to the <code>suite</code> section of the
<code>.kitchen.yml</code> will ensure those files get copied over for your integration testing.</p>

<p>First, create a throwaway secret to encrypt testing data.</p>

<pre><code>openssl rand -base64 512 &gt; test/integration/default/encrypted_data_bag_secret
</code></pre>

<p>Second, create an encrypted data bag with test data.  Apparently there is also
a <a href="https://github.com/thbishop/knife-solo_data_bag">knife-solo_data_bag</a> knife
plugin which can be used alternatively.</p>

<pre><code>knife data bag create certificates test --secret-file test/integration/default/encrypted_data_bag_secret
</code></pre>

<p>Copy and paste the encrypted data bag object into a file.</p>

<pre><code># Make a data_bag directory
mkdir -p test/integration/default/data_bags/certificates

# Copy the encrypted json output
knife data bag show certificates test -Fj

# Paste the encrypted json output into a json file
cat &gt; test/integration/default/data_bags/certificates/test.json
</code></pre>

<h3>Configure test-kitchen</h3>

<p>Edit the suites section in the <code>.kitchen.yml</code> and add <code>encrypted_data_bag_secret_key_path</code>
and <code>data_bag_path</code>.</p>

<p>Default generated configuration.</p>

<pre><code>suites:
- name: default
 run_list: ["recipe[certificate::default]"]
  attributes: {}
</code></pre>

<p>Configuration for test-kitchen with encrypted data bags.</p>

<pre><code>suites:
- name: default
  data_bags_path: "test/integration/default/data_bags"
  encrypted_data_bag_secret_key_path: "test/integration/default/encrypted_data_bag_secret"
  run_list: ["recipe[certificate::default]"]
  attributes: {}
</code></pre>

<p>That should be all you need to run test-kitchen integration tests
with encrypted data bags.  Note, the default directory in <code>test/integration/default</code>
corresponds to the suite name, <code>default</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Multi-knife HOWTO]]></title>
    <link href="http://atomic-penguin.github.com/blog/2013/04/25/Multi-Knife-HOWTO/"/>
    <updated>2013-04-25T20:26:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2013/04/25/Multi-Knife-HOWTO</id>
    <content type="html"><![CDATA[<h1>Overview</h1>

<p>  Here is an example shared configuration for knife, the command and control utility which ships with Opscode Chef.  You can drop this off in your <code>chef-repo/.chef/</code> directory, and multiple developers can use the same knife configuration to interact with more than one Chef server, or the Opscode platform.</p>

<p>  By using Bash functions and environment variables we can change the chef server, which knife is configured to use, on the fly.</p>

<!-- more -->


<p><strong>NOTE</strong>: knife will probably ignore your <code>~/.chef/knife.rb</code> once you begin using a shared knife configuration.</p>

<h1>Preparation</h1>

<p>  So that we can interact with <code>api.opscode.com</code>, and an internal Open Source Chef server, you will need to name your keys according to your Chef server username, Opscode username, and Opscode platform organization name.  Assuming you already have a <code>~/.chef</code> directory, we will organize it like so.</p>

<ol>
<li>Re-name your Open Source chef-server private key according to your username on the chef-server system.  For example, move your chef-server private key to <code>~/.chef/corporate-username.pem</code>.</li>
<li>Re-name your Opscode API key according to your Opscode platform username, for example I would move my Opscode key to <code>~/.chef/atomic-penguin.pem</code> to correspond to my own username.</li>
<li>Re-name your Organization validation key so that it corresponds to your organization&#8217;s name on the Opscode platform.  For example, move your Opscode organization validation key to ~/.chef/companyname-validator.pem.</li>
</ol>


<h1>Environment in ~/.bashrc</h1>

<p>  Somewhere near the end of my <code>~/.bashrc</code>, I am going to set 4 environment variables which will later be referenced in my shared knife configuration.  I am also going to use a couple of Bash functions to switch context between multiple servers.</p>

<h2>Environment variables</h2>

<p>The variables are as follows.</p>

<ol>
<li><code>OPSCODE_USER</code> - Set to your primary username.  This should be either your internal chef-server username or Opscode platform username.</li>
<li><code>ORGNAME</code> - Should be set to &#8220;chef&#8221; for an internal chef-server.  Set this as your Opscode platform orgname, if using that as your primary Chef server.</li>
<li><code>COOKBOOK_COPYRIGHT</code> - Set to your full name.</li>
<li><code>COOKBOOK_EMAIL</code> - Set to your e-mail address.</li>
</ol>


<h2>Bash functions</h2>

<p>  I have two knife related Bash functions in my <code>~/.bashrc</code> file.  I use a function called &#8220;ginsu&#8221; to interact with the Opscode API.  Then I use the &#8220;knife-reset&#8221; function to restore default behavior to interact with our internal Chef server.  This is just an example, you could use the ginsu function as a template.  This way you could have an &#8220;opscode-knife&#8221; function, or maybe &#8220;prod-knife&#8221;, &#8220;dev-knife&#8221;, or &#8220;preprod-knife&#8221; to correspond to different servers or environments.</p>

<p>  The <code>knife-reset</code> function simply sets my <code>OPSCODE_USER</code> variable equal to my internal Open Source chef-server username, and <code>ORGNAME</code> equal to &#8220;chef&#8221;.  The <code>knife-reset</code> function then exports the variables so my knife configuration gets reset back to my primary Chef server.</p>

<p>  The <code>ginsu</code> function sets the <code>OPSCODE_USER</code> variable equal to my Opscode platform username, and <code>ORGNAME</code> equal to my Opscode organization name.  The <code>ginsu</code> function then exports the variables and passes any parameters to the knife command.  This way I can do a <code>ginsu cookbook site share yumrepo "Package Management"</code> to upload my yumrepo cookbook to the Opscode Community Cookbook site.</p>

<h1>Knife configuration</h1>

<p>  This is the actual knife configuration file, which we can drop off in the <code>chef-repo/.chef</code> directory.  I will explain the important parts, so you can modify this to fit your own needs easily.  Note, once you drop this off in your <code>chef-repo</code>, your <code>~/.chef/knife.rb</code> will no longer work.</p>

<p>Set a local Ruby variable <code>user</code> equal to the <code>OPSCODE_USER</code> or the environment variable <code>USER</code>.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">user</span> <span class="o">=</span> ENV<span class="o">[</span><span class="s1">&#39;OPSCODE_USER&#39;</span><span class="o">]</span> <span class="o">||</span> ENV<span class="o">[</span><span class="s1">&#39;USER&#39;</span><span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<p>Switching back and forth between different keys and user names occurs by changing, and exporting, the <code>OPSCODE_USER</code> and <code>ORGNAME</code> Bash environment variables.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>client_key               <span class="s2">&quot;#{ENV[&#39;HOME&#39;]}/.chef/#{user}.pem&quot;</span>
</span><span class='line'>validation_client_name   <span class="s2">&quot;#{ENV[&#39;ORGNAME&#39;]}-validator&quot;</span>
</span><span class='line'>validation_key           <span class="s2">&quot;#{ENV[&#39;HOME&#39;]}/.chef/#{ENV[&#39;ORGNAME&#39;]}-validator.pem&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<p>I used an if/then/else block in my shared knife.rb to switch the URL of my Chef server based on the <code>ORGNAME</code>.  You could use a <code>CHEF_SERVER</code> environment variable in your <code>~/.bashrc</code> if that would work better for you.  Obviously you&#8217;ll want to change the hardcoded <code>corporate</code> string to match your Opscode platform orgname, and also edit the <code>chef_server_url</code> to point another Chef server.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="k">if</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;ORGNAME&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;corporate&#39;</span>
</span><span class='line'>  <span class="n">chef_server_url</span> <span class="s2">&quot;https://api.opscode.com/organizations/</span><span class="si">#{</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;ORGNAME&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;ORGNAME&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;chef&#39;</span>
</span><span class='line'>  <span class="n">chef_server_url</span> <span class="s1">&#39;http://chef.example.com:4000&#39;</span>
</span><span class='line'><span class="k">end</span>
</span></code></pre></td></tr></table></div></figure>


<p>If you commit all your Community Cookbooks under corporate copyright rather than individual developer names, then you might want to hardcode the company name and a generic development team e-mail address.  This way, your developers don&#8217;t have to set <code>COOKBOOK_COPYRIGHT</code> or <code>COOKBOOK_EMAIL</code>.  The command <code>knife cookbook create &lt;cookbook name&gt;</code> will fill in the company name as the cookbook maintainer, and copyright owner in that case.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">cookbook_license</span>         <span class="s1">&#39;apachev2&#39;</span>
</span><span class='line'><span class="n">cookbook_copyright</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;COOKBOOK_COPYRIGHT&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="s1">&#39;Corporate, Inc.&#39;</span>
</span><span class='line'><span class="n">cookbook_email</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;COOKBOOK_EMAIL&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="s1">&#39;cookbooks@example.com&#39;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Reference ~/.bashrc</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">OPSCODE_USER</span><span class="o">=</span>chef-server-username
</span><span class='line'><span class="nv">ORGNAME</span><span class="o">=</span>chef
</span><span class='line'><span class="nv">COOKBOOK_COPYRIGHT</span><span class="o">=</span><span class="s1">&#39;My Full Name&#39;</span>
</span><span class='line'><span class="nv">COOKBOOK_EMAIL</span><span class="o">=</span><span class="s1">&#39;dev@example.org&#39;</span>
</span><span class='line'><span class="nv">AWS_ACCESS_KEY_ID</span><span class="o">=</span><span class="s2">&quot;BlahBlahBlah&quot;</span>
</span><span class='line'><span class="nv">AWS_SECRET_ACCESS_KEY</span><span class="o">=</span><span class="s2">&quot;BlahBlahBlahBlah&quot;</span>
</span><span class='line'><span class="nb">export </span>OPSCODE_USER ORGNAME COOKBOOK_COPYRIGHT COOKBOOK_EMAIL AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY
</span><span class='line'>
</span><span class='line'><span class="k">function </span>knife-reset <span class="o">{</span>
</span><span class='line'>  <span class="nv">OPSCODE_USER</span><span class="o">=</span>chef-server-username
</span><span class='line'>  <span class="nv">ORGNAME</span><span class="o">=</span>chef
</span><span class='line'>  <span class="nb">export </span>OPSCODE_USER ORGNAME
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="k">function </span>ginsu <span class="o">{</span>
</span><span class='line'>  <span class="nv">OPSCODE_USER</span><span class="o">=</span>community-username
</span><span class='line'>  <span class="nv">ORGNAME</span><span class="o">=</span>community-organization
</span><span class='line'>  <span class="nb">export </span>OPSCODE_USER ORGNAME
</span><span class='line'>  knife <span class="s2">&quot;$@&quot;</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Reference chef-repo/.chef/knife.rb</h1>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
</pre></td><td class='code'><pre><code class='ruby'><span class='line'><span class="n">current_dir</span> <span class="o">=</span> <span class="no">File</span><span class="o">.</span><span class="n">dirname</span><span class="p">(</span><span class="bp">__FILE__</span><span class="p">)</span>
</span><span class='line'><span class="n">user</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;OPSCODE_USER&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;USER&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">log_level</span>                <span class="ss">:info</span>
</span><span class='line'><span class="n">log_location</span>             <span class="no">STDOUT</span>
</span><span class='line'><span class="n">node_name</span>                <span class="n">user</span>
</span><span class='line'><span class="n">client_key</span>               <span class="s2">&quot;</span><span class="si">#{</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;HOME&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/.chef/</span><span class="si">#{</span><span class="n">user</span><span class="si">}</span><span class="s2">.pem&quot;</span>
</span><span class='line'><span class="n">validation_client_name</span>   <span class="s2">&quot;</span><span class="si">#{</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;ORGNAME&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">-validator&quot;</span>
</span><span class='line'><span class="n">validation_key</span>           <span class="s2">&quot;</span><span class="si">#{</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;HOME&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/.chef/</span><span class="si">#{</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;ORGNAME&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">-validator.pem&quot;</span>
</span><span class='line'><span class="k">if</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;ORGNAME&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;marshall&#39;</span>
</span><span class='line'><span class="n">chef_server_url</span> <span class="s2">&quot;https://api.opscode.com/organizations/</span><span class="si">#{</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;ORGNAME&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">&quot;</span>
</span><span class='line'><span class="k">elsif</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;ORGNAME&#39;</span><span class="o">]</span> <span class="o">==</span> <span class="s1">&#39;chef&#39;</span>
</span><span class='line'><span class="n">chef_server_url</span> <span class="s1">&#39;http://chef.example.org:4000&#39;</span>
</span><span class='line'><span class="k">end</span>
</span><span class='line'><span class="n">cache_type</span>               <span class="s1">&#39;BasicFile&#39;</span>
</span><span class='line'><span class="n">cache_options</span><span class="p">(</span> <span class="ss">:path</span> <span class="o">=&gt;</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;HOME&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/.chef/checksums&quot;</span> <span class="p">)</span>
</span><span class='line'><span class="n">cookbook_path</span>            <span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">current_dir</span><span class="si">}</span><span class="s2">/../cookbooks&quot;</span><span class="p">,</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="n">current_dir</span><span class="si">}</span><span class="s2">/../site-cookbooks&quot;</span><span class="o">]</span>
</span><span class='line'><span class="n">role_path</span> <span class="o">[</span><span class="s2">&quot;</span><span class="si">#{</span><span class="n">current_dir</span><span class="si">}</span><span class="s2">/../roles&quot;</span><span class="o">]</span>
</span><span class='line'><span class="n">cookbook_license</span>         <span class="s1">&#39;apachev2&#39;</span>
</span><span class='line'><span class="n">cookbook_copyright</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;COOKBOOK_COPYRIGHT&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="s1">&#39;Corporate, Inc.&#39;</span>
</span><span class='line'><span class="n">cookbook_email</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;COOKBOOK_EMAIL&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="s1">&#39;corporate@example.com&#39;</span>
</span><span class='line'><span class="n">knife</span><span class="o">[</span><span class="ss">:aws_access_key_id</span><span class="o">]</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;AWS_ACCESS_KEY_ID&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">knife</span><span class="o">[</span><span class="ss">:aws_secret_access_key</span><span class="o">]</span> <span class="o">=</span>  <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;AWS_SECRET_ACCESS_KEY&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">knife</span><span class="o">[</span><span class="ss">:identity_file</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;</span><span class="si">#{</span><span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;HOME&#39;</span><span class="o">]</span><span class="si">}</span><span class="s2">/.ssh/id_rsa&quot;</span>
</span><span class='line'><span class="n">knife</span><span class="o">[</span><span class="ss">:aws_ssh_key_id</span><span class="o">]</span> <span class="o">=</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;OPSCODE_USER&#39;</span><span class="o">]</span> <span class="o">||</span> <span class="no">ENV</span><span class="o">[</span><span class="s1">&#39;USER&#39;</span><span class="o">]</span>
</span><span class='line'><span class="n">knife</span><span class="o">[</span><span class="ss">:availability_zone</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;us-east-1a&quot;</span>
</span><span class='line'><span class="n">knife</span><span class="o">[</span><span class="ss">:region</span><span class="o">]</span> <span class="o">=</span> <span class="s2">&quot;us-east-1&quot;</span>
</span></code></pre></td></tr></table></div></figure>


<h1>Credits</h1>

<p>This was partly adapted from Stephen Nelson-Smith&#8217;s (@LordCope) book Test-Driven Infrastructure with Chef (http://shop.oreilly.com/product/0636920020042.do).</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Disabling VerticalSync in KDE for Steam4Linux Beta]]></title>
    <link href="http://atomic-penguin.github.com/blog/2013/01/15/disabling-verticalsync-in-kde-for-steam4linux-beta/"/>
    <updated>2013-01-15T10:16:00-05:00</updated>
    <id>http://atomic-penguin.github.com/blog/2013/01/15/disabling-verticalsync-in-kde-for-steam4linux-beta</id>
    <content type="html"><![CDATA[<p>According to <a href="http://en.wikipedia.org/wiki/Screen_tearing#V-sync">Wikipedia</a>,
Vertical synchronization (or VerticalSync) is</p>

<p><code>an option in most systems, wherein the video card is prevented from doing anything visible to the
display memory until after the monitor finishes its current refresh cycle.</code></p>

<p>In layman&#8217;s terms, when Vertical synchronization is turned on, many aspects
of video processing are locked to the reported refresh rate of your display
hardware.  In other words, if your fancy LCD screen reports 60 Hz. is its own
supported refresh rate, then games or video playback will be capped at 60 frames
per second when Vertical synchronization is turned on.</p>

<!-- more -->


<p>I have seen a couple reports that turning off <a href="http://www.reddit.com/r/tf2/comments/15o98u/psalinux_vsync_enabled_by_default_even_if_it_says/">VSync</a>
doesn&#8217;t actually disable VSync in Linux Steam games like Team Fortress 2.  The proposed workaround in this reddit thread was toggling
the option on, and off, until VSync was actually turned off.  Searching through the <a href="https://github.com/ValveSoftware/steam-for-linux">steam-for-linux issue tracker</a>
last night, I found this <a href="https://github.com/ValveSoftware/steam-for-linux/issues/271">solution</a> on an unrelated AMD TearFree bug report.</p>

<p>The solution offered by Github user dedoz, worked perfectly for me.  It turns out this is not a bug within any game, or Linux Steam,
but rather a default option in compositing window managers such as KDE.  By default KDE turns on VSync for OpenGL rendering.  By
changing the following setting, I am now able to toggle the option <code>mat_vsync 1</code> to enable VSync, or <code>mat_vsync 0</code> to disable VSync
in-game from a game configuration file.  I have no idea, how to go about changing this in other window manager/desktop environments
suffering from the same problem.  If you encounter such a problem on another desktop environment, or find another workaround, be sure to leave a comment.</p>

<ol>
<li>First locate kwinrc.  Mine lives in <code>~/.kde/share/config/kwinrc</code></li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>locate kwinrc
</span><span class='line'><span class="nv">$HOME</span>/.kde/share/config/kwinrc
</span><span class='line'>/usr/share/kubuntu-default-settings/kde4-profile/default/share/config/kwinrc
</span><span class='line'>/usr/share/kubuntu-netbook-default-settings/share/config/kwinrc
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Next, find the <code>[Compositing]</code> section in <code>kwinrc</code>.  Add the line <code>GLVSync=false</code> to this section.</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>vim <span class="nv">$HOME</span>/.kde/share/config/kwinrc
</span><span class='line'>
</span><span class='line'><span class="o">[</span>Compositing<span class="o">]</span>
</span><span class='line'><span class="nv">GLVSync</span><span class="o">=</span><span class="nb">false</span>
</span><span class='line'><span class="nv">OpenGLIsUnsafe</span><span class="o">=</span><span class="nb">false</span>
</span><span class='line'>
</span><span class='line'>&lt;esc&gt;:wq
</span></code></pre></td></tr></table></div></figure>


<ol>
<li>Finally, use <code>qdbus</code> to call <code>org.kde.kwin.reconfigure()</code>.</li>
</ol>


<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">$ </span>qdbus org.kde.kwin /KWin reconfigure
</span></code></pre></td></tr></table></div></figure>


<p>Whether you want to play with Vertical synchronization on, or off, while in-game will come down to personal preference.
The window manager probably should not enforce Vertical synchronization being on by default, while in-game however.  Ideally,
the in-game setting should be deferred to by the window manager.  The agnostic approach here, is to turn off enforcement
within the window manager, so that the user can decide on the setting which they prefer in-game.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Mini-HOWTO: Building a deb package for Beta NVidia drivers]]></title>
    <link href="http://atomic-penguin.github.com/blog/2012/12/14/mini-howto-building-a-deb-package-for-beta-nvidia-drivers/"/>
    <updated>2012-12-14T12:12:00-05:00</updated>
    <id>http://atomic-penguin.github.com/blog/2012/12/14/mini-howto-building-a-deb-package-for-beta-nvidia-drivers</id>
    <content type="html"><![CDATA[<p>Since the first week of this last November, the closed <a href="http://steamcommunity.com/linux">Linux Steam beta</a>
has been underway.  I think the latest official count of Linux beta
users is somewhere near 80,000 gamers.  That is a pretty impressive
closed beta headcount considering that is more than 1% of the active
5 million users who use Steam daily.  It is really an exciting time
for all the Linux desktop users.  As the introduction of Steam
has encouraged GPU OEMs to improve their Linux video drivers.  Also,
some of the game developers participating in the Linux beta have been
supporting their customers and fixing bugs, even for those not
officially included in the closed beta program.</p>

<!-- more -->


<p>On to the point of this blog post, as I mentioned, the Steam Linux
beta has led to many Linux video driver improvements from major
GPU vendors.  As of this post, there have been several experimental
NVidia driver releases with major bugfixes and performance improvements
for Linux users.  The NVidia experimental driver releases have perhaps
happened so quickly that it isn&#8217;t feasible to re-package every iteration
for Ubuntu/Debian users.</p>

<p>Read on if you would like to re-package the NVidia experimental releases,
in a <code>.deb</code> package for yourself.  The point of using the <code>.deb</code> packaging
is to maintain the ability to upgrade to an official Ubuntu/Debian package
using native package management as newer releases become available in
officially supported repositories.</p>

<h2>Experimental NVidia drivers as deb packages</h2>

<p>The package maintainer for the nvidia-graphics-drivers has general build guidelines <a href="https://github.com/tseliot/nvidia-graphics-drivers/blob/master/debian/nvidia-current.README.Debian">here</a>.
If you&#8217;re desperate for the new drivers via Ubuntu packaging, you can rebuild them with the 310.19, or 313.09 packages.
Here is the process I followed to install the latest NVidia Beta drivers from deb packages.  The major version bump
to 313.09 is a slightly different process.  I could not find any automated way to regenerate the names of the packaging templates
to match the version increase.</p>

<h3>Minor version bump 310.14 - 310.19</h3>

<ol>
<li><code>cd /usr/src</code> (you&#8217;ll need src group membership to write to /usr/src)</li>
<li><code>apt-get source nvidia-experimental-310</code></li>
<li><code>sudo apt-get build-dep nvidia-experimental-310</code></li>
<li><code>sudo apt-get install devscripts</code></li>
<li><code>cd nvidia-current &amp;&amp; rm -f *.run</code></li>
<li>Download both NVIDIA-Linux-x86-310.19.run and NVIDIA-Linux-x86_64-310.19.run.

<ul>
<li>Move those to your build directory, which should be your current working directory.</li>
</ul>
</li>
<li><code>tar zcvf ../nvidia-graphics-drivers-experimental-310_310.19.orig.tar.gz --exclude debian .</code></li>
<li><code>dch -i</code>

<ul>
<li>Edit the changelog, making sure to bump the version on the tom line from 310.14 to 310.19. Might get a warning that the source directory changed.</li>
</ul>
</li>
<li><code>debclean</code></li>
<li><code>debuild</code></li>
<li><code>cd /usr/src</code> (Your new .deb files should be in /usr/src)</li>
<li><code>sudo dpkg -i nvidia-experimental-310_310.19-0ubuntu0.1_amd64.deb</code></li>
</ol>


<h3>Major version bump 310.14 -> 313.09</h3>

<ol>
<li><code>cd /usr/src</code> (you&#8217;ll need src group membership to write to /usr/src)</li>
<li><code>apt-get source nvidia-experimental-310</code></li>
<li><code>sudo apt-get build-dep nvidia-experimental-310</code></li>
<li><code>sudo apt-get install devscripts</code></li>
<li><code>cd nvidia-experimental-310 &amp;&amp; rm -f *.run</code></li>
<li>Download both NVIDIA-Linux-x86-313.09.run and NVIDIA-Linux-x86_64-313.09.run.

<ul>
<li>Move those to your build directory, which should be your current working directory.</li>
</ul>
</li>
<li><code>tar zcvf ../nvidia-graphics-drivers-experimental-313_313.09.orig.tar.gz --exclude debian .</code></li>
<li><code>dch --package nvidia-graphics-drivers-experimental-313 --newversion 313.09-0ubuntu0.1</code>

<ul>
<li>Edit the changelog.  Might get a warning that the source directory changed.</li>
</ul>
</li>
<li><code>cd debian</code></li>
<li><code>rename 's/(nvidia-experimental)-310(.*\.in)/$1-313$2/' *.in</code>

<ul>
<li>Rename the <code>.in</code> templates for the major version bump.</li>
</ul>
</li>
<li><code>cd ..</code></li>
<li><code>debclean</code></li>
<li><code>debuild</code></li>
<li><code>cd /usr/src</code> (Your new .deb files should be in /usr/src)</li>
<li><code>sudo dpkg -i nvidia-experimental-313_313.09-0ubuntu0.1_amd64.deb</code></li>
</ol>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Atomic Penguins Feel Good Chili]]></title>
    <link href="http://atomic-penguin.github.com/blog/2012/09/08/atomic-penguins-feel-good-chili/"/>
    <updated>2012-09-08T00:00:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2012/09/08/atomic-penguins-feel-good-chili</id>
    <content type="html"><![CDATA[<p>When I am not writing Opschef cookbooks, I do enjoy real cooking in my spare time.  I have been down and out with a bit of a cold for the last week.  With it getting colder outside and with me feeling a bit better today, I decided to make a big pot of chili.</p>

<p>There is just something about having a big pot stewing and making your house smell homey, like a big pot of soup, which can make you feel better.  Capsaicin, the magical stuff which make peppers hot, is thought to break up congestion, to help clear up your sinuses, and helps with the management of pain.  So some spicy Chili certainly can&#8217;t hurt, especially given the cold I have suffered through this week.</p>

<!-- more -->


<p>Without further ado, here is what you&#8217;ll need for my own personal recipe of Chili.  I have a 15.6 Quart stock pot, and this recipe fills about half the pot.  I would estimate the yield at about 2 gallons, and it makes great leftovers, or can be frozen for later.  The recipe takes about 45 minutes of preparation time, and about 2 hours of cooking time.  It is totally worth the effort, and a great way to spend a weekend afternoon.</p>

<h2>Ingredient list</h2>

<ul>
<li>~15 Quart. / ~7 Litre stock pot</li>
<li>2 - medium sweet yellow onions</li>
<li>2 - bell peppers</li>
<li>4 - jalapeno peppers</li>
<li>2-4 - cloves of garlic</li>
<li>2x 28 oz. can - crushed whole tomatoes</li>
<li>14 oz. can - beef broth</li>
<li>14 oz. can - kidney beans (optional)</li>
<li>6 oz. can - tomato paste</li>
<li>2 Tbsp. - cooking oil</li>
<li>3 Tbsp. - chili powder</li>
<li>1 Tbsp. - ground cumin seed</li>
<li>1 Tbsp. - cocoa powder (bakers cocoa)</li>
<li>2 tsp. - coarse sea, or kosher, salt</li>
<li>1 tsp. - crushed red pepper</li>
<li>3/4 tsp. - ground cayenne pepper</li>
<li>1/2 tsp. - ground cinnamon</li>
<li>1/2 tsp. - black pepper</li>
<li>at least 3 lbs. - chuck beef steak/roast</li>
<li>Shredded cheddar (optional)</li>
<li>2 cans or bottles - Guinness, or other dark Stout, beer</li>
</ul>


<h2>Directions</h2>

<p>Gather all your dry spices and dump into a small bowl.  This should include: 3 Tbsp. chili powder; 1 Tbsp. cumin; 1 Tbsp cocoa powder; 2 tsp. coarse salt; 1 tsp. red pepper; 3/4 tsp. cayenne; 1/2 tsp. cinnamon; 1/2 tsp. pepper.  Set the small bowl aside, for use later.</p>

<p><img src="http://atomic-penguin.github.com/images/20120908/01spicemix.jpg" title="Spice mix, mise en place" alt="Spice mix" /></p>

<p>Smash the garlic with the side of your knife and peel the paper off.</p>

<p><img src="http://atomic-penguin.github.com/images/20120908/02choppinggarlic.jpg" title="Smash and peel the garlic" alt="Smash and peel the garlic" /></p>

<p>Then, proceed to finely mince the garlic.  Put your garlic in a small bowl, separate from your dry spices.  Again, set this bowl aside, for use later.</p>

<p><img src="http://atomic-penguin.github.com/images/20120908/03choppedgarlic.jpg" title="Then finely mince the garlic" alt="Mince the garlic" /></p>

<p>Roughly chop your onions.  See the following video from Gordon Ramsay on how to chop an onion.  You don&#8217;t have to chop it so thinly or precisely as in the video.  The roughly chopped pieces will break apart and cook down in your stew.  If you can cut 1/4 inch pieces that would be just about right.  You probably don&#8217;t want large strings, rings, or chunks of onion in your chili though.</p>

<iframe width="560" height="315" src="http://www.youtube.com/embed/TwGBt3V0yvc#t=6s" frameborder="0" allowfullscreen></iframe>


<p>Once you have that onion chopped up, place your chopped onions in your small bowl with your minced garlic and set it aside.</p>

<p><img src="http://atomic-penguin.github.com/images/20120908/04choppedonionsandgarlic.jpg" title="Chopped onions and garlic." alt="Chopped onions and garlic" /></p>

<p>Trim and cut the steak into roughly 1/2 inch cubes.  You want to trim away any cartilage or excess fat.</p>

<p><img src="http://atomic-penguin.github.com/images/20120908/05chucksteak.jpg" title="Chuck beef roast/steak" alt="Chuck beef" /></p>

<p>A little extra fat on the meat is good, it will render down as it stews, so you don&#8217;t have to be obsessive compulsive in trimming away every little piece.  On the other hand, you don&#8217;t want a big chunk of cartilage hanging off a bit of meat, as big chunks will never render down and it is fairly unappetizing to get a mouthful.</p>

<p>This is the most labor intensive part of making stew or Chili.  If butchering meat isn&#8217;t your cup of tea, you can always buy convenience packages of <em>stew meat</em> at many supermarkets.  You&#8217;ll typically pay a little more for the same meat, and the convenience of not having to trim your own beef for stew.</p>

<p><img src="http://atomic-penguin.github.com/images/20120908/06choppedsteak.jpg" title="Trimmed stew meat" alt="Trimmed stew meat" /></p>

<p>Now that the hard part is out of the way.  Set your stock pot on a stove burner, set at medium high, and add your oil.  Wait a couple minutes for it to get hot, then dump in your meat stirring so it doesn&#8217;t burn or stick.  Just want to get the meat a little brown, not really cook it through.  Add your onions and garlic, and turn down the heat to medium low.  Give the onions, garlic, and meat an occasional stir while you chop your peppers to keep things from burning.  If anything starts burning, or smoking, you have got the fire way too hot.  Just turn down the fire, and maybe add a splash of beef stock to cool things down.</p>

<p>While your beef is browning and the onions and garlic are cooking, then you can start chopping your peppers.  Once again, you can defer to the Gordon Ramsay video below for a quick way to chop peppers.</p>

<p>We want rough chopped bell peppers, about the same size pieces as your onions.  Cut down the side of the pepper around the seed pod for a quick, no mess chop.</p>

<p><img src="http://atomic-penguin.github.com/images/20120908/07choppingpeppers.jpg" title="Cut down the wall of the pepper, around the seed pod" alt="Chopping peppers" /></p>

<p>You should have 3 or 4 large chunks after cutting out the seed pod.  Cut the chunks of pepper into 1/4 inch strips, and then cut across the strips for a 1/4 inch dice.</p>

<p>Once again, you can defer to the Gordon Ramsay video below for a video demonstration.  Again, we&#8217;re not cutting our peppers for our chili as thin as his Julienned cut seen in the video.</p>

<iframe width="560" height="315" src="http://www.youtube.com/embed/_fU1p-iGieI" frameborder="0" allowfullscreen></iframe>


<p>You can use the same method on jalapenos peppers.  Instead of trying to stand the pepper on its head, lay it on its side and slice one side at a time off the length of the pepper.</p>

<p><img src="http://atomic-penguin.github.com/images/20120908/09choppingjalapenos.jpg" title="Use the same method on jalapenos" alt="Chopping jalapenos" /></p>

<p>Once you have the sides cut off of the jalapeno&#8217;s seed pods.  Cut the sides into strips, then cut across the strips to mince.  We want to get rid of the <em>veins</em> and <em>seeds</em> of the jalapeno because those hold most of the heat.  With the chili spices, and the jalapenos themselves, the Chili stew will have a nice kick.  It won&#8217;t be an overbearing amount of spicy heat though.</p>

<p>Check on your stock pot, throw in your peppers, and give it a good stir.</p>

<p>Add the can of beef stock, and the can of crushed tomatoes, stir the pot well</p>

<p>Time to throw in that magical spice mix to turn this stew into Chili proper.  The cocoa powder will thicken the stew up quite a bit, stir it so that everything mixes well.  You want to make sure with the stew thickening that nothing sticks to the pot, and burns.</p>

<p><img src="http://atomic-penguin.github.com/images/20120908/12addthespices.jpg" title="Add spices and stir" alt="Add spices" /></p>

<p>Finally, pour in two bottles or cans of Guinness (or other dark Stout beer).  If desired, add kidney beans, but avoid if in <em>Texas</em>.  Turn up to medium heat, add the tomato paste to thicken the chili, stir to mix the paste, and cover the pot to let it heat through.  Turn heat down to low, and let simmer once all that liquid is heated through.  Stir occassionally and let it simmer for an hour, or two.</p>

<p><img src="http://atomic-penguin.github.com/images/20120908/13addtheguinness.jpg" title="Add Guinness" alt="Add Guinness" /></p>

<p>I turn off the burner and let it cool down for a bit before serving.  You can serve on its own, with quesadillas, cheddar, sour cream and chives, or a peanut butter sandwich.  Whatever floats your boat, really.  The meat turned out tender, and the Chili broth had just enough spicy heat, but not too much.</p>

<p><img src="http://atomic-penguin.github.com/images/20120908/15servewitchcheddar.jpg" title="Chili and cheddar" alt="Serve with cheese" /></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Foodfight podcast - Episode 17, Testing with Eric G. Wolfe & Fletcher Nichol]]></title>
    <link href="http://atomic-penguin.github.com/blog/2012/06/12/Foodfight-17-Testing-with-Eric-and-Fletcher/"/>
    <updated>2012-06-12T00:00:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2012/06/12/Foodfight-17-Testing-with-Eric-and-Fletcher</id>
    <content type="html"><![CDATA[<p>I had such a blast at the inaugural Chefconf in San Francisco, CA.  This was my first time visiting the area, I had a chance to visit the <a href="https://plus.google.com/112791157300091682319/posts/2Dr6BMnBqHH">Alcatraz</a> prison.  I also drank a lot of <a href="http://www.anchorbrewing.com/beer/anchor_steam">Anchor Steam</a>, while pair programming with <a href="http://twitter.com/#!fnichol">Fletcher Nichol</a> to make the NTP cookbook a reference cookbook for testing Chef recipes.</p>

<p>During my second appearance on the Food Fight show, we covered what we hacked on throughout Chefconf with regard to Travis CI automated testing.  We also talked a bit about what we are doing internally with Jenkins to test our cookbook code.  Here is the link to the podcast <a href="http://traffic.libsyn.com/foodfight/FoodFightShowEpisode17.mp3">audio</a> and also the show <a href="http://foodfightshow.org/2012/06/episode-17-testing-with-eric-g-wolfe.html">notes</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HOWTO (Video) Simple KVM Virtualization, a Command Line Demonstration]]></title>
    <link href="http://atomic-penguin.github.com/blog/2012/04/04/HOWTO-simple-kvm-virtualization-a-command-line-demonstration/"/>
    <updated>2012-04-04T00:00:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2012/04/04/HOWTO-simple-kvm-virtualization-a-command-line-demonstration</id>
    <content type="html"><![CDATA[<p>A simple demonstration using KVM (Kernel-based Virtual Machine) from the command line interface.</p>

<p>Sorry for the slight graphics artefacts, I was testing out some screencast software for the first time.</p>

<p>Watch it on youtube, <a href="http://www.youtube.com/watch?v=aN8lb2O-wHs">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Foodfight podcast - Episode 1, Chef in 2012]]></title>
    <link href="http://atomic-penguin.github.com/blog/2012/01/15/Foodfight-1-Chef-in-2012/"/>
    <updated>2012-01-15T00:00:00-05:00</updated>
    <id>http://atomic-penguin.github.com/blog/2012/01/15/Foodfight-1-Chef-in-2012</id>
    <content type="html"><![CDATA[<p>I was really excited to be part of the first community podcast for Opscode Chef, <a href="http://foodfightshow.org">Food Fight</a>.  Here is a link to the podcast <a href="http://traffic.libsyn.com/foodfight/ff_ep01_2.mp3">audio</a> and also the show <a href="http://foodfightshow.org/2012/01/episode-1-chef-in-2012.html">notes</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Marshall University case study]]></title>
    <link href="http://atomic-penguin.github.com/blog/2011/09/06/MU-case-study/"/>
    <updated>2011-09-06T00:00:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2011/09/06/MU-case-study</id>
    <content type="html"><![CDATA[<p>Our System Administration team colloborated with <a href="http://www.ospcode.com/">Opscode</a> to put together a Case Study detailing our use of their System automation framework, Opscode Chef.</p>

<p>Case Study: Opscode + Marshall University <a href="http://www.opscode.com/customers/marshall/">web</a> <a href="http://www.opscode.com/case-studies/opscode-case-study-marshall.pdf">pdf</a></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2 cent Linux tip using find and tar for a selective backup]]></title>
    <link href="http://atomic-penguin.github.com/blog/2011/07/11/2-cent-linux-tip-using-find-and-tar-for-a-selective-backup/"/>
    <updated>2011-07-11T00:00:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2011/07/11/2-cent-linux-tip-using-find-and-tar-for-a-selective-backup</id>
    <content type="html"><![CDATA[<p>So I&#39;m blowing away, and re-installing, my Steam Bottle on <a href="http://codeweavers.com">Codeweaver&#39;s</a> Crossover games.  I was hoping to get some in-game overlay support for the Community/Friends features of Steam.  I really really want to hang on to Team Fortress/Left 4 Dead settings though.</p>

<p>Using the <code>find</code> command we can solve this problem fairly easy.</p>

<!-- more -->


<p>So the basic requirements in this scenario boil down to finding all the config files under the <code>~/.cxgames</code> tree. I have an <code>~/etc</code> directory to keep a backup of important things such as settings and handy scripts. I will copy my tar file to the <code>~/etc</code> directory so I can find it easily later. However, I don&#8217;t want every <code>*.cfg</code> file under my Steam bottle, just the ones for those specific games (Team Fortress and Left 4 Dead). When I run the following command, I&#39;ll discover those games have a common top-level directory, <em>~/.cxgames/Steam/drive_c/Program Files/Steam/steamapps</em>.</p>

<div class="highlight"><pre><code class="bash">    find ~/.cxgames -name <span class="s2">&quot;*.cfg&quot;</span>
</code></pre>
</div>


<p>When I run the following command, however, I&#8217;ll get an error due to spaces in the directory/filename structure.  Note the backslash in &#8220;Program Files&#8221; is an escaped space for the shell to properly interpret this.</p>

<div class="highlight"><pre><code class="bash">    find .cxgames/Steam/drive_c/Program<span class="se">\ </span>Files/Steam/steamapps/ | xargs tar -rf ~/etc/steam-settings.tar
</code></pre>
</div>


<p>The find command has a switch <code>-print0</code> to deal with this, and <code>xargs</code> will process this find output format with the <code>-0</code> flag.  The <code>-print0</code> and <code>-0</code> flags tell these system utilities to print or use null-terminated strings, making it easier for shell utilities to consume the spaces in the filenames.  Therefore the following command will get the files I need:</p>

<div class="highlight"><pre><code class="bash">    find ~/.cxgames/Steam/drive_c/Program Files/Steam/steamapps/ -name <span class="s2">&quot;*.cfg&quot;</span> -print0 | xargs -0 tar -rf ~/etc/steam-settings.tar
</code></pre>
</div>


<p>Restoring is as simple as running the following command from within my home directory.</p>

<div class="highlight"><pre><code class="bash">    tar xvf ~/etc/steam-settings.tar
</code></pre>
</div>


<p>Perhaps some day we&#8217;ll have a Linux steam client, and a promotional TF2 item named the <strong>Unix Pipe</strong>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[HOWTO Using rsync to move a mountain of data]]></title>
    <link href="http://atomic-penguin.github.com/blog/2011/04/16/HOWTO-Using-rsync-to-move-a-mountain-of-data/"/>
    <updated>2011-04-16T00:00:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2011/04/16/HOWTO-Using-rsync-to-move-a-mountain-of-data</id>
    <content type="html"><![CDATA[<p>In this installment of my blog, I want to document the proper use of rsync for folks who are tasked with moving a large amount of data.  I&#39;ll even show you a few things you can do from the command line interface to extend the built-in capability of rsync using a little bash-scripting trickery.</p>

<p>I use rsync to migrate Oracle databases between servers at least a few times per year.  In a snap, its one of the easiest ways to clone a database from a Production server to a Pre-Production/Development server or even a Virtual Machine.  You don&#8217;t have to have a fancy Fibre-Channel or iSCSI storage array attached to both servers, in order to do a data LUN clone, thanks to rsync.</p>

<p>I hope you enjoy this in-depth article.  Please feel free to comment: if you need clarification, find it useful, or something I wrote is just plain wrong.</p>

<!-- more -->


<h2>The Tools</h2>

<p>Three things you&#8217;ll need for this exercise:</p>

<ol>
<li><code>screen</code> - lets you detach a console session, and can be re-attached after logging out and walking away.</li>
<li><code>rsync</code> - the swiss-army knife of copy/archiving programs.</li>
<li><code>data</code> - any will do. Whether its a large group of /home directories, or even a live Oracle database.</li>
</ol>


<h2>Basics of screen</h2>

<ol>
<li>Simply type <code>screen</code> in the command-line interface.</li>
<li>Kick off a large rsync job that may take several hours to finish</li>
<li><code>ctrl-a d</code> detaches your screen session.  You may then proceed to logout, walk away, and go grab a lunch, or two.</li>
<li>Log back in to the server later, and re-attach your session by running <code>screen -r</code>.</li>
<li>If your connection to the server was interrupted by an unreliable network, screen may throw an error saying the session is already attached, however screen -dr will de-tach and re-attach the session with no problem.</li>
</ol>


<h2>Basics of rsync</h2>

<p>There is a daunting amount of options to be found in the <code>rsync</code> manpage.  An important point to remember is what no-slash and trailing slashes on directories mean.</p>

<p>For instance if I want to copy everything within a folder named <code>/home</code>, I would use <code>rsync -av /home/ /path/to/destination</code> to copy the files within <code>/home</code>, to the folder <code>/path/to/destination</code>.</p>

<p>On the other hand, if I want to copy the folder <code>/home</code> itself to <code>/path/to/destination</code>, then I would use <code>rsync -av /home /path/to/destination</code>, which will then create the folder <code>/path/to/destination/home</code>.</p>

<p>Here are a few of the most important command-line options to remember.</p>

<ul>
<li><code>-v</code>: verbose, will tell you what file its on, how many left to check, etc.</li>
<li><code>-a</code>: archive, will set most of the preferable options, this is shorthand for -rlptgoD. If in doubt, you most always want the -a option.

<ul>
<li><code>-r</code>: recursive</li>
<li><code>-l</code>: copy symlinks as files, not the file to which they point.  Why do you want this? It prevents your rsync job from looping back to a directory above itself, causing an infinite loop, in the case there are a few unruly symlinks in your filesystem tree.</li>
<li><code>-p</code>: preserve permissions</li>
<li><code>-t</code>: preserve modification timestamps</li>
<li><code>-g</code>: preserve group ownership. rsync is smart enough to change the group ID by name, rather than numerical group ID on the destination.</li>
<li><code>-o</code>: preserve ownership. Same behavior applies to user ID by name, rather than numerical ID.</li>
<li><code>-D</code>: preserve special files. Such as device files, named pipes, etc.</li>
</ul>
</li>
</ul>


<p>Some other useful switches</p>

<ul>
<li><code>--progress</code>: gives you per-file data transfer rates, and spinning progress bars if you&#39;re into that sort of thing.</li>
<li><code>--stats</code>: gives you a nice summary rate, and speed-up rate at the end of the job.</li>
</ul>


<h2>Set up a rsync daemon</h2>

<p>If you are cloning a database or migrating a complex ERP system, the fastest way to do that is export a root share for your destination host, by defining it in rsyncd.conf. I typically set up a temporary read-only rsync daemon on the production host.  The reasoning for that is the the client end of rsync will consume more memory as it indexes the list of files to transfer.  Therefore rsync should have less impact by running the job from a pre-production host, while the daemon runs on your production server.</p>

<p>Anyway, the configuration files for the temporary rsync daemon on your production system should look something like this.</p>

<div class="highlight"><pre><code class="bash">    <span class="c">#/etc/rsyncd.conf</span>
    syslog <span class="nv">facility</span> <span class="o">=</span> local3
    <span class="nb">read </span><span class="nv">only</span> <span class="o">=</span> yes <span class="nv">list</span> <span class="o">=</span> yes
    auth <span class="nv">users</span> <span class="o">=</span> root
    secrets <span class="nv">file</span> <span class="o">=</span> /etc/rsyncd.secrets
    hosts <span class="nv">allow</span> <span class="o">=</span> 1.2.3.4/32
    <span class="nv">uid</span> <span class="o">=</span> 0
    <span class="nv">gid</span> <span class="o">=</span> 0

    <span class="o">[</span>root<span class="o">]</span>
    <span class="nv">comment</span> <span class="o">=</span> /
    <span class="nv">path</span> <span class="o">=</span> /
</code></pre>
</div>


<p>Set a password for the daemon in /etc/rsyncd.secrets, and set the owner/group of that file to root:root with 600 permissions.  The password file format looks like this.</p>

<div class="highlight"><pre><code class="bash">    <span class="c">#/etc/rsyncd.secrets</span>
    root:SuperSecretPasswordFTW
</code></pre>
</div>


<p>Open TCP port 873 for the pre-production host, an appropriate iptables rule would look something like this.</p>

<div class="highlight"><pre><code class="bash">    iptables -I INPUT -s preprod-server -m tcp -p tcp --dport 873 --syn -j ACCEPT
</code></pre>
</div>


<p>Finally run the following command to start up your temporary rsync daemon on the production host.</p>

<div class="highlight"><pre><code class="bash">    
    rsync --daemon
</code></pre>
</div>


<p>Now you should have all the components necessary to copy files over the network using the rsync protocol, an rsync client on the pre-production server, and an rsync server on the production server.  Your command should look something like this.</p>

<div class="highlight"><pre><code class="bash">    rsync -av root@prod-server::root/home/ /home
</code></pre>
</div>


<p>Yet another way of saying the same thing, but also copying any special permissions on the top-level directory of home to the /home directory on the pre-prod server.</p>

<div class="highlight"><pre><code class="bash">    rsync -av root@prod-server::root/home /
</code></pre>
</div>


<p>The rsync url components are user (root), followed by an @, hostname (prod-server), followed by a separator (::), followed by the share name (root), followed by the source directory with, or without an optional trailing-slash.</p>

<p>Once the rsync job has finished on the pre-production server, you can run the following to kill off the daemon, and remove your temporary iptables rule.</p>

<div class="highlight"><pre><code class="bash">    killall -9 rsync
    iptables -D INPUT -s preprod-server -m tcp -p tcp --dport 873 --syn -j ACCEPT
</code></pre>
</div>


<h2>Advanced rsync usage</h2>

<h3>block-level replication</h3>

<p>In theory you would want to use the following option to update block-level changes on large files.</p>

<ul>
<li><code>--inplace</code>: rsync writes updated data directly to a file, instead of making a copy and moving it into place.

<ul>
<li>I strongly advise you to RTFM on this one, it comes with several warnings.  But from what I understand, this option was added to rsync for cloning large files such as databases.  Both server&#39;s rsync programs need to support the in-place option for this to work, otherwise it will give you an error.</li>
</ul>
</li>
</ul>


<p>I usually kick off a large rysnc job on a hot database, and run one or even a few catch-up jobs on a cold database before the final switch in any large-scale data migration.  What that means is you can run rsync on a running database, but you will not get a consistent Oracle DBF file on your pre-production host during a hot run.  It doesn&#39;t matter if you use the <code>--inplace</code> option, or not, on the first hot run.  Either way, you probably will not get a consistent copy of the database.</p>

<p>However, on any subsequent cold run (when the database is shut down) <code>--inplace</code> can significantly reduce the amount of data written on the pre-production host.  Because this particular option has the ability to do block-level updates to large files, when used on your final rsync catch-up job.  I have witnessed rsync updating half a Terabyte worth of dbf files in close to half an hour, during a final cold run on a quiet weekend.  I have also seen it take up to four hours to do just as much after close of business on a Friday night.  Your mileage may vary from my results, probably the most significant variable in rsync performance is the amount of usage between the initial hot run and final cold run.</p>

<h3>Extending rsync by automation with Bash</h3>

<p>Lets say you have a long paired list of source and destination directories.  For example, I might want to archive <code>/home/u/user1</code> on the prod server to <code>/home/user1</code> on the pre-prod server.  The rsync rules of the trailing slashes on directories do come into play here.</p>

<p>So after playing around with some perl/sed, and awk to generate a list of source and destinations from a password file on the production server.  I might have a file rsync-home.list containing syntactically correct paired rsync sources and destinations, which would look something like this.</p>

<div class="highlight"><pre><code class="bash">    root@prod-server::root/home/a/alice /home
    root@prod-server::root/home/b/bob /home
    root@prod-server::root/u01/app/oracle /u01/app
    root@prod-server::root/home/c/charlie /home
    root@prod-server::root/home/d/dave /home
    root@prod-server::root/home/e/eve /home
    root@prod-server::root/home/m/mallory /home
    root@prod-server::root/home/t/trent /home
    root@prod-server::root/home/w/walter /home
    root@prod-server::root/usr/local/vendor /usr/local
</code></pre>
</div>


<p>Unfortunately there is no switch for rsync to read such a list, and operate on it directly.  However, it is fairly easy to script with a bash one-liner, like so.</p>

<div class="highlight"><pre><code class="bash">    
    <span class="nv">RSYNC_PASSWORD</span><span class="o">=</span><span class="s2">&quot;SuperSecretPasswordFTW&quot;</span>; cat rsync-home.list | <span class="k">while </span><span class="nb">read </span>LINE; <span class="k">do </span>rsync -av --progress <span class="nv">$LINE</span>; <span class="k">done</span>
</code></pre>
</div>


<p>The <code>RSYNC_PASSWORD</code> is an environment variable you can set to avoid having to type in the actual password for the rsync daemon, just be aware it will show up in your .bash_history file, and output from <code>ps -ef</code>.  So it is advisable to not use the same password as your root account for the purposes of rsync.</p>

<h3>Hunting down symlinks in the archive tree</h3>

<p>Remember when I said you usually don&#39;t want to copy what a symlink points at, rather copy the pointer (symlink file) itself.  If you want a quick and easy way to make a list of symlinked directories within the <code>/u01</code> tree on your production server, you can pair <code>find</code>, and <code>awk</code> commands to generate a list like this. The <code>-type l</code> option tells <code>find</code> to look for symlinks, the <code>-xtype d</code> option tells find to look for symlinks pointing at directories.  The <code>$NF</code> variable in <code>awk</code> returns the last field from the long-list <code>ls -l</code> output.</p>

<div class="highlight"><pre><code class="bash">    find /u01 -type l -xtype d -exec ls -l <span class="o">{}</span> ; | awk <span class="s1">&#39;{ print $NF }&#39;</span>
</code></pre>
</div>


<p>Which returns a handy little list of items remaining to be copied over to our pre-prod server by rsync.  The couple of returned entries without a leading-slash can be thrown out, those are links within the <code>/u01</code> tree and would therefore be copied as a result of running an rsync job on <code>/u01</code>.</p>

<div class="highlight"><pre><code class="bash">    /u04/app/oracle/RMAN
    /u03/app/oracle/arclogs
    /u05/app/oracle/exports
    /u02/app/oracle/oradata/fooprod
    /u06/app/oracle/oradata/foopreprd
    client
    /u08
    linux
</code></pre>
</div>



]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Red Hat Enterprise Linux 5.x iSCSI and Device Mapper Multipath HOWTO]]></title>
    <link href="http://atomic-penguin.github.com/blog/2010/11/29/Red-Hat-Enterprise-Linux-5.x-iSCSI-and-device-mapper-multipath-HOWTO/"/>
    <updated>2010-11-29T00:00:00-05:00</updated>
    <id>http://atomic-penguin.github.com/blog/2010/11/29/Red-Hat-Enterprise-Linux-5.x-iSCSI-and-device-mapper-multipath-HOWTO</id>
    <content type="html"><![CDATA[<h2>Abstract</h2>

<p><img src="http://atomic-penguin.github.com/images/muwam.png" alt="Marshall University Systems Infrastructure Team" /></p>

<p>This document outlines in a detailed step-by-step fashion,
how to properly configure iSCSI initiator, and multi-path I/O
software on Red Hat Enterprise Linux version 5.</p>

<pre><code>Copyright © 2010, Marshall University Systems Infrastructure Team
Author: Eric G. Wolfe 
Contributor: Jaymz Mynes 
Editor: Tim Calvert 

Marshall University 
400 Hal Greer Blvd. 
Huntington, WV 25755 

This work is licensed under the Creative Commons Attribution-Noncommercial-Share 
Alike 3.0 United States License. To view a copy of this license, 
visit http://creativecommons.org/licenses/by-nc-sa/3.0/us/ 
or send a letter to Creative Commons, 171 Second Street, Suite 
300, San Francisco, California, 94105, USA. 

The block M logo is a trademark of Marshall University. All other 
trademarks are owned by their respective owners. 
</code></pre>

<!-- more -->


<h2>I. Introduction</h2>

<p>The following configuration was documented and tested on a Dell
Poweredge R710, with RedHat Enterprise Linux 5.0 x64.  The R710
server has 4 Broadcom NeteXtreme II BCM5709 Gigabit Network
Interface Cards (NIC), and is connected by Ethernet to an EqualLogic
PS6000 storage array.</p>

<p>This step-by-step guide is directly applicable to these software
and hardware components.  However, much of the software configuration
would remain the same for any Linux distribution on either X86
or AMD64 based hardware.  The most dynamic variable in any case will be
specific storage solutions.  Consider any factors that your
storage vendor may support, or recommend, before proceeding.</p>

<h2>II. Hardware preparation</h2>

<p>Appropriate hardware preparation is beyond the scope of this
document.  See vendor documentation for connecting Ethernet
cables to the storage array, and appropriate configuration
of the storage array.  According to Dell EqualLogic (2008) some
recommended guidelines are as follows:</p>

<ul>
<li>Do&#8230;

<ul>
<li>Use Cat 6 or Cat 5e TSB95 cables.</li>
<li>Use redundant switches and network paths.</li>
<li>Use Flow Control on switches and NICs</li>
<li>Use Jumbo Frames on switches and NICs</li>
<li>Use VLANs, if physically separate switches are not available.</li>
</ul>
</li>
<li>Do <strong>NOT</strong>&#8230;

<ul>
<li>Use Spanning Tree Protocol on switch ports for iSCSI connections.</li>
<li>Use Unicast storm control on a switch that handles iSCSI traffic.</li>
</ul>
</li>
</ul>


<p>See <em>PS Series Array Network Performance Guidelines</em>, or relevant
storage vendor&#8217;s documentation for more information.</p>

<h2>III. Manual installation</h2>

<p>The following section outlines manual installation and configuration
of Device Mapper Multipath and Open-iSCSI initiator on Red Hat
Enterprise Linux version 5.x.  If this is your first time installing
and configuring Device Mapper Multipath, or Open-iSCSI software,
then this is the recommended method of installation and configuration.<br/>
It is possible to automate a portion of this installation and
configuration with Red Hat&#8217;s Kickstart, or configuration management
engines such as Puppet.  However, that is beyond the scope of this
document.</p>

<p>The methods outlined in this guide apply directly to Red Hat Enterprise
Linux, though a major portion of the configuration items are generic
and could be applied to other Linux distributions.  The author of this
HOWTO assumes these steps will, for the most part, remain constant
for subsequent versions of Red Hat Enterprise Linux.</p>

<h3>1. Package installation and verification</h3>

<p>After performing a base install of Red Hat Enterprise v5, make
sure to upgrade the system to the latest patch-level.</p>

<h4>1. Change this line in <em>/etc/yum.conf</em> as illustrated below.</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">exclude</span><span class="o">=</span>kernel*
</span></code></pre></td></tr></table></div></figure>


<h4>2. Comment out the exclude options, so the kernel may be upgraded.</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">exclude</span><span class="o">=</span><span class="c">#kernel* </span>
</span></code></pre></td></tr></table></div></figure>


<h4>3. Run the following to upgrade to the latest patch-level.</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum -y upgrade
</span></code></pre></td></tr></table></div></figure>


<h4>4. Run the following to install needed software.</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>yum -y install iscsi-initiator-utils device-mapper-multipath
</span></code></pre></td></tr></table></div></figure>


<p>Dell Equallogic (2009) recommends using RHEL 5.4 (version 5
update 4) or newer for best performance and interoperability
with PS Series storage arrays.  Ensure the following requirements
are met before proceeding.</p>

<h4>5. Run the following to check for minimum package versions.</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>rpm -qa iscsi-initiator-utils device-mapper-multipath
</span><span class='line'>device-mapper-multipath-&lt;version&gt;-&lt;patch-level&gt;.el5
</span><span class='line'>iscsi-initiator-utils-&lt;version&gt;-&lt;patch-level&gt;.el5
</span></code></pre></td></tr></table></div></figure>


<ul>
<li>Minimum package version for PS Series arrays

<ul>
<li>iscsi-initiator-utils-<strong>6.2.0.742-0.6</strong>.el5</li>
</ul>
</li>
<li>Minimum package version for GbE NICs

<ul>
<li>iscsi-iniator-utils-<strong>6.2.0.868-0.7</strong>.el5</li>
</ul>
</li>
<li>With SELinux enabled, you may not be able to login to iSCSI targets.
You may have to create a policy for iSCSI traffic, or disable
SELinux.</li>
</ul>


<h3>2. Selecting an I/O scheduler</h3>

<p>After updating the kernel, you will need to reboot the system,
before proceeding.  This would be a good time to pick an appropriate
I/O scheduler.  Available I/O schedulers, and the kernel option
to select them, are as follows.</p>

<ul>
<li>Completely Fair Queueing – elevator=cfq</li>
<li>Deadline – <strong>elevator=deadline</strong></li>
<li>NOOP – <strong>elevator=noop</strong></li>
<li>Anticipatory – elevator=as</li>
</ul>


<p>According to a citation in Dell Equallogic (2009), the Open-iSCSI
group reports that sometimes the <strong>NOOP</strong> scheduler works best for
iSCSI server environments.  However, if this server will be used
as an Oracle database or application server, it is standard best
practice to use the <strong>Deadline</strong> scheduler for optimal performance.</p>

<h4>Run the following command to enable the NOOP scheduler, before rebooting.</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sed -e <span class="s1">&#39;s!/vmlinuz.*!&amp; elevator=noop!g&#39;</span> -i /boot/grub/menu.lst
</span></code></pre></td></tr></table></div></figure>


<h4>If you are provisioning an Oracle server, then run the following to select Deadline.</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>sed -e <span class="s1">&#39;s!/vmlinuz.*!&amp; elevator=deadline!g&#39;</span> -i /boot/grub/menu.lst
</span></code></pre></td></tr></table></div></figure>


<p>Finally, reboot the server after upgrading the system and kernel. <br/>
Do this before proceeding with the configuration steps that
follow so the proper I/O scheduler will be active and the newer
kernel will be available.  You may also want to go back and
uncomment the <code>exclude=#kernel*</code> line in <em>/etc/yum.conf</em>, at
your own discretion.</p>

<h2>IV. Configuring Open-iSCSI</h2>

<h3>1. Configuring the NIC cards for iSCSI use</h3>

<p>In the following example, it is assumed you will be using the third
(eth2) and fourth (eth3) Network Interface Cards in the system
for iSCSI traffic.  If this is not the case, then adjust the configuration
for different NICs as necessary.</p>

<p>Add the following bold lines to each of the <em>ifcfg-ethX</em> scripts
for each iSCSI NIC.  Ensure that <code>IPADDR</code>, and <code>NETMASK</code> are correctly
set for your iSCSI subnet.  Make sure <code>ONBOOT</code> is set to <em>yes</em>.<br/>
This is set so that each interface will be automatically initialized
when the system is booted.  The <code>MTU</code> variable should be set to
<em>9000</em>, for each iSCSI NIC, this MTU setting will enable jumbo
frames.</p>

<p><em>/etc/sysconfig/network-scripts/ifcfg-eth2</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Broadcom Corporation NetXtreme II BCM5709 Gigabit Ethernet </span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span>eth2
</span><span class='line'><span class="nv">HWADDR</span><span class="o">=</span>00:11:22:33:44:aa
</span><span class='line'><span class="nv">ONBOOT</span><span class="o">=</span>yes
</span><span class='line'><span class="nv">BOOTPROTO</span><span class="o">=</span>none
</span><span class='line'><span class="nv">NETMASK</span><span class="o">=</span>255.255.255.0
</span><span class='line'><span class="nv">IPADDR</span><span class="o">=</span>10.1.2.3
</span><span class='line'><span class="nv">TYPE</span><span class="o">=</span>Ethernet
</span><span class='line'><span class="nv">MTU</span><span class="o">=</span>9000
</span></code></pre></td></tr></table></div></figure>


<p><em>/etc/sysconfig/network-scripts/ifcfg-eth3</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># Broadcom Corporation NetXtreme II BCM5709 Gigabit Ethernet </span>
</span><span class='line'><span class="nv">DEVICE</span><span class="o">=</span>eth3
</span><span class='line'><span class="nv">HWADDR</span><span class="o">=</span>00:11:22:33:44:bb
</span><span class='line'><span class="nv">ONBOOT</span><span class="o">=</span>yes
</span><span class='line'><span class="nv">BOOTPROTO</span><span class="o">=</span>none
</span><span class='line'><span class="nv">NETMASK</span><span class="o">=</span>255.255.255.0
</span><span class='line'><span class="nv">IPADDR</span><span class="o">=</span>10.1.2.4
</span><span class='line'><span class="nv">TYPE</span><span class="o">=</span>Ethernet
</span><span class='line'><span class="nv">MTU</span><span class="o">=</span>9000
</span></code></pre></td></tr></table></div></figure>


<p>Dell EqualLogic (2009) recommends enabling Flow Control, and
disabling Auto Negotiation on each iSCSI NIC.  For these settings
to be automatically applied upon each boot, add the following
code, in boldface, to the <em>/etc/rc.local</em> file.</p>

<p><em>/etc/rc.local</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c"># iSCSI Interface Settings for Equallogic </span>
</span><span class='line'><span class="nv">ISCSI_IF</span><span class="o">=</span><span class="s2">&quot;eth2 eth3&quot;</span>
</span><span class='line'><span class="nv">ETHTOOL_OPTS</span><span class="o">=</span><span class="s2">&quot;autoneg off rx on tx on&quot;</span>
</span><span class='line'><span class="nv">ETHTOOL</span><span class="o">=</span><span class="sb">`</span>which ethtool<span class="sb">`</span>
</span><span class='line'>
</span><span class='line'><span class="k">for </span>i in <span class="nv">$ISCSI_IF</span>; <span class="k">do </span>
</span><span class='line'><span class="k">  </span><span class="nb">echo</span> <span class="s2">&quot;$ETHTOOL -A $i $ETHTOOL_OPTS&quot;</span>
</span><span class='line'>  <span class="nv">$ETHTOOL</span> -A <span class="nv">$ISCSI_IF</span> <span class="nv">$ETHTOOL_OPTS</span>
</span><span class='line'><span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<h4>1.1. Configuring Open-iSCSI initiator utilities</h4>

<p>You need to tune a few lines in the <em>/etc/iscsi/iscid.conf</em> file,
per vendor recommendations.  You can grep out blank and comment
lines in this file for quick inspection.  The lines we are most
concerned about are followed by comments, noting vendor-specific
recommendations.</p>

<h5>1.1.1. Notes about iscsid.conf configuration</h5>

<p>As I understand it, the configuration item, <code>node.session.timeo.replacement_timeout</code>
is for specifying the length of time, in seconds,
after which the iSCSI layer will fail back to the Device Mapper
Multipath application layer.  By default, this is <em>120</em> seconds, or 2 minutes.
According to Red Hat (2008), it is preferable to pass the path failure quickly from
the SCSI layer to your Multipath software, which would be necessary for
quick fail-over.  With the default configuration, two minutes
of I/O would be queued before failing the path. If you are familiar
with Fiber Channel path fail-over, it tends to be instantaneous.<br/>
Most people configuring iSCSI fail-over certainly don&#8217;t want
a failed path to be retried for two whole minutes.  Using the default
configuration with a production database server could lead
to massive amounts of I/O being queued instead of the expected
behavior of failing over to another working path quickly.  Changing the
<code>node.session.timeo.replacement_timeout</code> value to <em>15</em> will allow the path
to failover much more quickly.</p>

<p>According to Dell (2010), if the Broadcom <strong>bnx2i</strong> interface fails
to login to an Equallogic iSCSI storage volume, the <code>node.session.initial_login_retry_max</code>
should be changed from the default value of <em>8</em> to <em>12</em>.</p>

<p>According to Dell Equallogic (2009) the options <code>node.session.cmds_max</code>,
and <code>node.session.queue_depth</code> should be changed for Equallogic
arrays.  The recommendation for <code>node.session.cmds_max</code> is
to change the value from <em>128</em> to <em>1024</em>.  The recommendation for
<code>node.session.queue_depth</code> is to change the value from <em>32</em>
to <em>128</em>.</p>

<p>Finally, according to the in-line comments in the default <em>iscsid.conf</em>,
and Dell (2010) Equallogic arrays should have <code>node.session.iscsi.FastAbort</code>
set to <em>No</em>.  If using software such as iSCSI Enterprise Target
(IET), instead of an Equallogic Array, leave the <code>node.session.iscsi.FastAbort</code>
value set to the default, which is <em>Yes</em>.</p>

<h5>1.1.2. iscsid.conf</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>egrep -v “^<span class="o">(</span><span class="c">#|$)” /etc/iscsi/iscid.conf</span>
</span><span class='line'>node.startup <span class="o">=</span> automatic
</span><span class='line'>node.session.timeo.replacement_timeout <span class="o">=</span> 15 <span class="c"># default 120; RedHat recommended </span>
</span><span class='line'>node.conn<span class="o">[</span>0<span class="o">]</span>.timeo.login_timeout <span class="o">=</span> 15
</span><span class='line'>node.conn<span class="o">[</span>0<span class="o">]</span>.timeo.logout_timeout <span class="o">=</span> 15
</span><span class='line'>node.conn<span class="o">[</span>0<span class="o">]</span>.timeo.noop_out_interval <span class="o">=</span> 5
</span><span class='line'>node.conn<span class="o">[</span>0<span class="o">]</span>.timeo.noop_out_timeout <span class="o">=</span> 5
</span><span class='line'>node.session.err_timeo.abort_timeout <span class="o">=</span> 15
</span><span class='line'>node.session.err_timeo.lu_reset_timeout <span class="o">=</span> 20
</span><span class='line'>node.session.initial_login_retry_max <span class="o">=</span> 12 <span class="c"># default 8; Dell recommended </span>
</span><span class='line'>node.session.cmds_max <span class="o">=</span> 1024 <span class="c"># default 128; Equallogic recommended</span>
</span><span class='line'>node.session.queue_depth <span class="o">=</span> 128 <span class="c"># default 32; Equallogic recommended</span>
</span><span class='line'>node.session.iscsi.InitialR2T <span class="o">=</span> No
</span><span class='line'>node.session.iscsi.ImmediateData <span class="o">=</span> Yes
</span><span class='line'>node.session.iscsi.FirstBurstLength <span class="o">=</span> 262144
</span><span class='line'>node.session.iscsi.MaxBurstLength <span class="o">=</span> 16776192
</span><span class='line'>node.conn<span class="o">[</span>0<span class="o">]</span>.iscsi.MaxRecvDataSegmentLength <span class="o">=</span> 262144
</span><span class='line'>discovery.sendtargets.iscsi.MaxRecvDataSegmentLength <span class="o">=</span> 32768
</span><span class='line'>node.conn<span class="o">[</span>0<span class="o">]</span>.iscsi.HeaderDigest <span class="o">=</span> None
</span><span class='line'>node.session.iscsi.FastAbort <span class="o">=</span> No <span class="c"># default Yes; Dell / Open-iSCSI recommended** </span>
</span></code></pre></td></tr></table></div></figure>


<h2>IV. Targeting and logging in with iscsiadm</h2>

<h3>1. Create iSCSI interfaces</h3>

<p>The iSCSI interfaces are separate pseudo-devices used by Open-iSCSI.<br/>
From Open-iSCSI&#8217;s point-of-view, these are not the same as physical
Ethernet devices.  What you will need to do is bind
each of your ethX devices to an iSCSI interface.  Technically speaking,
you could call your iSCSI interfaces eth2 and eth3, and bind them to
the corresponding physical devices in the /dev folder.  To avoid any
confusion about physical NICs and iSCSI interfaces, it is recommended
to give the interfaces different names like <code>iface0</code> and <code>iface1</code>.</p>

<p>You can create your iSCSI interfaces with the following commands.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iscsiadm -m iface -I iface0 -o new
</span><span class='line'>
</span><span class='line'>iscsiadm -m iface -I iface1 -o new
</span></code></pre></td></tr></table></div></figure>


<p>When you pass no options to <code>iscsiadm</code> then you may examine
the iSCSI interface properties for one of the new interfaces.  Being able
to view the currently active configuration can come in handy in cases where
you need to troubleshoot.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iscsiadm -m iface -I iface0
</span><span class='line'><span class="c"># BEGIN RECORD 2.0-871 </span>
</span><span class='line'>iface.iscsi_ifacename <span class="o">=</span> iface0
</span><span class='line'>iface.net_ifacename <span class="o">=</span> &lt;empty&gt;
</span><span class='line'>iface.ipaddress <span class="o">=</span> &lt;empty&gt;
</span><span class='line'>iface.hwaddress <span class="o">=</span> &lt;empty&gt;
</span><span class='line'>iface.transport_name <span class="o">=</span> tcp
</span><span class='line'>iface.initiatorname <span class="o">=</span> &lt;empty&gt;
</span><span class='line'><span class="c"># END RECORD </span>
</span></code></pre></td></tr></table></div></figure>


<h3>2. Bind iSCSI interfaces</h3>

<p>Now that we have iSCSI interfaces, we need to bind them to a physical
Ethernet device.  You can use either a device name or MAC address.  Open-iSCSI
will not allow you to bind the interfaces with both device name
and MAC address.</p>

<h4>Binding by physical device name</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iscsiadm -m iface -o update -I iface0 -n iface.net_ifacename -v eth2
</span><span class='line'>
</span><span class='line'>iscsiadm -m iface -o update -I iface1 -n iface.net_ifacename -v eth3
</span></code></pre></td></tr></table></div></figure>


<h4>Binding by MAC address</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iscsiadm -m iface -o update -I iface0 -n iface.hwaddress -v 00:aa:bb:cc:dd:ee
</span><span class='line'>
</span><span class='line'>iscsiadm -m iface -o update -I iface1 -n iface.hwaddress -v 00:aa:bb:cc:dd:ff
</span></code></pre></td></tr></table></div></figure>


<p>An <strong>important note</strong> about alternate transport drivers for iSCSI
offload:</p>

<p>By default, your new iSCSI interfaces will use TCP as
the iSCSI transport. There are other offload transport drivers
available to use, such as <strong>bnx2i</strong>, <strong>iser</strong>, and <strong>cxgb3i</strong>.
According to the iscsiadm manual page and personal conversation
with a Dell storage engineer, these are experimental drivers
which are not supported or considered stable.</p>

<h4>2.1. Updating iSCSI interfaces</h4>

<p>If you bind an interface by MAC address, and have a hardware replacement
which changes the MAC address. Then the iSCSI interface bindings
will need to be updated to reflect such system changes.
You can do this with an update command:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iscsiadm -m iface -o update -I iface0 -n iface.hwaddress -v 00:aa:bb:cc:dd:11
</span><span class='line'>
</span><span class='line'>iscsiadm -m iface -o update -I iface1 -n iface.hwaddress -v 00:aa:bb:cc:dd:33
</span></code></pre></td></tr></table></div></figure>


<h3>3. Connecting to the iSCSI array</h3>

<p>The file <em>/etc/iscsi/initiatorname.iscsi</em> should contain
an initiator name for your iSCSI client host.  You need to include
this initiator name on your iSCSI array&#8217;s configuration for
this specific iSCSI client host.</p>

<p>If you have not yet started the iSCSI daemon, run the following
command before we commence with discovering targets.</p>

<h4>Start the iSCSI daemon</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>service iscsid start
</span></code></pre></td></tr></table></div></figure>


<h4>3.1. Discovering targets</h4>

<p>Once the iscsid service is running
and the client&#8217;s initiator name is configured on the iSCSI array,
then you may proceed with the following command to discover available
targets.  Assuming our iSCSI array had an IP address of 10.1.2.10,
the following command would return the available targets.</p>

<h5>Target discovery command</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iscsiadm -m discovery -t st -p 10.1.2.10:3260
</span><span class='line'>10.1.2.10:3260,1 iqn.2001-05.com.equallogic:0-8a0906-7008ec504-23d000000204bad0-hostname-vol0
</span><span class='line'>10.1.2.10:3260,1 iqn.2001-05.com.equallogic:0-8a0906-7008ec504-23d000000204bad0-hostname-vol0
</span></code></pre></td></tr></table></div></figure>


<h4>3.2. Login to target</h4>

<p>We are finally ready to login to our target.  To log in to all targets, use
the following command.  This should return successful
if everything is working correctly.</p>

<h5>Login command</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iscsiadm -m node -l
</span></code></pre></td></tr></table></div></figure>


<p>Individual targets can be logged into by specifying a whole target name.</p>

<h5>Login to a specific target by name</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iscsiadm -m node -T iqn.2001-05.com.equallogic:0-8a0906-7008ec504-23d000000204bad0-hostname-vol0 -l -p 10.1.2.10:3260
</span></code></pre></td></tr></table></div></figure>


<h4>3.3. Logoff a target</h4>

<p>Logging off is basically the same as logging into a target, except
you use the <em>-u</em> switch, instead of <em>-l</em>.</p>

<h5>Command to log out of a target</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iscsiadm -m node -u
</span></code></pre></td></tr></table></div></figure>


<h4>3.4. Session status</h4>

<p>The session command can be used to print the basic status
or more verbose output for debugging and troubleshooting.</p>

<h5>Basic session status command</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iscsiadm -m session
</span><span class='line'>tcp: <span class="o">[</span>10<span class="o">]</span> 10.1.2.10:3260,1 iqn.2001-05.com.equallogic:0-8a0906-7008ec504-23d000000204bad0-hostname-vol0
</span><span class='line'>tcp: <span class="o">[</span>9<span class="o">]</span> 10.1.2.10:3260,1 iqn.2001-05.com.equallogic:0-8a0906-7008ec504-23d000000204bad0-hostname-vol0
</span></code></pre></td></tr></table></div></figure>


<h5>Troubleshooting information with -P (print) flag and verbosity level 0-3</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>iscsiadm -m session -P3
</span><span class='line'>iSCSI Transport Class version 2.0-871
</span><span class='line'>version 2.0-871
</span><span class='line'>Target: iqn.2001-05.com.equallogic:0-8a0906-7008ec504-23d000000204bad0-hostname-vol0
</span><span class='line'>Current Portal: 10.1.2.25:3260,1
</span><span class='line'>Persistent Portal: 10.1.2.10:3260,1
</span><span class='line'>**********
</span><span class='line'>Interface:
</span><span class='line'>**********
</span><span class='line'>Iface Name: iface0
</span><span class='line'>Iface Transport: tcp
</span><span class='line'>Iface Initiatorname: iqn.1994-05.com.redhat:13c39f80866f
</span><span class='line'>Iface IPaddress: 10.1.2.3
</span><span class='line'>Iface HWaddress: &lt;empty&gt;
</span><span class='line'>Iface Netdev: eth2
</span><span class='line'>SID: 10
</span><span class='line'>iSCSI Connection State: LOGGED IN
</span><span class='line'>iSCSI Session State: LOGGED_IN
</span><span class='line'>Internal iscsid Session State: NO CHANGE
</span><span class='line'>************************
</span><span class='line'>Negotiated iSCSI params:
</span><span class='line'>************************
</span><span class='line'>HeaderDigest: None
</span><span class='line'>DataDigest: None
</span><span class='line'>MaxRecvDataSegmentLength: 262144
</span><span class='line'>MaxXmitDataSegmentLength: 65536
</span><span class='line'>FirstBurstLength: 65536
</span><span class='line'>MaxBurstLength: 262144
</span><span class='line'>ImmediateData: Yes
</span><span class='line'>InitialR2T: No
</span><span class='line'>MaxOutstandingR2T: 1
</span><span class='line'>************************
</span><span class='line'>Attached SCSI devices:
</span><span class='line'>************************
</span><span class='line'>Host Number: 27 State: running
</span><span class='line'>scsi27 Channel 00 Id 0 Lun: 0
</span><span class='line'>Attached scsi disk sdc State: running
</span></code></pre></td></tr></table></div></figure>


<h2>V. Configuring Device Mapper Multipath</h2>

<h3>1. Notes about the Device Mapper Multipath example</h3>

<p>The final major step is to configure Device Mapper Multipath
using the configuration file <em>/etc/multipath.conf</em>.  By default there will be a <code>devnode “*”</code>
line in the <code>blacklist</code> section, thereby disabling Multipath
for all devices in the system.  If you want to assign persistently
bound names to iSCSI devices, be sure to set <code>user_friendly_names</code>
to <em>yes</em>, as seen in the example on the following page.  If you do not
use friendly names with Device Mapper, you&#8217;ll end up with device
names such as <em>/dev/mapper/__36090afffffffffffffffffffffffffff</em>.
When using friendly names, you will need to specify an <code>alias</code>
line in the <code>multipaths</code> section after Open-iSCSI is configured
and working correctly with your iSCSI target or array.</p>

<p>You will want to blacklist any local devices that do not have multiple
paths to be managed in the <em>blacklist</em> section. It is recommended
to blacklist the local SCSI disks by World Wide Identifier (WWID).
The WWID is a unique identifier for any block device and may be retrieved with the command
<code>scsi_id -g -u -s /block/sdX</code>, where <em>X</em> is the letter identifier of the local SCSI disk.
It cannot hurt to also blacklist local devices by physical device name with
a <code>devnode</code> line and a Perl-compatible regular expression string.<br/>
The reason for blacklisting a second time with a regular expression
is in case the <code>scsi_id</code> program fails to read the WWID from sector
zero of a local device.  See the blacklist section in the configuration
example.  The WWID line and <code>devnode “^sd[a]$”</code> line both serve as a
blacklist for device sda.</p>

<p>Once you have discovered targets and logged in to the iSCSI array, you can use the <code>iscsiadm -m
session -P3</code> command to find the physical device names of your
iSCSI volumes.  Then you can use
the <code>scsi_id -g -u -s /block/sdX</code> command to find the WWID of
your iSCSI volumes. Once you have the WWIDs of your iSCSI volumes,
you can configure friendly name aliases in the <code>multipaths</code>
section, as seen in the example <em>multipath.conf</em> below.</p>

<p>The device section in the configuration example is pertinent
to an Equallogic PS Series array.  The lines followed by comments are
of particular importance, and are the recommended defaults
for Equallogic devices. You can override the parameters on a
per-volume basis in the <code>multipaths</code> section.</p>

<p>For best performance, the value for <code>rr_min_io</code> should
be in the range of <em>10-20</em> for database environments.
For more sequential loads, which may be seen on file servers,
performance might be better if
<em>rr_min_io</em> is set in the range
<em>100-512</em>.  Any <code>rr_min_io</code> value over <em>200</em>
will require <code>cmds_max</code> and <code>queue_depth</code> parameters in
<em>iscsid.conf</em> to be increased.</p>

<h4>1.1. multipath.conf</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>defaults <span class="o">{</span>
</span><span class='line'>  user_friendly_names yes
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>blacklist <span class="o">{</span>
</span><span class='line'>  wwid 360924fffffffffffffffffffffffffff
</span><span class='line'>  devnode <span class="s2">&quot;^sd[a]$&quot;</span>
</span><span class='line'>  devnode <span class="s2">&quot;^(ram|raw|loop|fd|md|dm-|sr|scd|st)[0-9]*&quot;</span>
</span><span class='line'>  devnode <span class="s2">&quot;^hd[a-z][[0-9]*]&quot;</span>
</span><span class='line'>  devnode <span class="s2">&quot;^cciss!c[0-9]d[0-9]*[p[0-9]*]&quot;</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>devices <span class="o">{</span>
</span><span class='line'>  device <span class="o">{</span>
</span><span class='line'>    vendor <span class="s2">&quot;EQLOGIC&quot;</span> <span class="c"># Manufacturer</span>
</span><span class='line'>    product <span class="s2">&quot;100E-00&quot;</span> <span class="c"># Model identifier</span>
</span><span class='line'>    path_grouping_policy multibus
</span><span class='line'>    getuid_callout <span class="s2">&quot;/sbin/scsi_id -g -u -s /block/%n&quot;</span> <span class="o">{</span>text:change<span class="o">}</span>
</span><span class='line'>    no_path_retry queue <span class="c"># If no paths, queue I/O </span>
</span><span class='line'>    path_checker readsector0
</span><span class='line'>    failback immediate
</span><span class='line'>    path_selector <span class="s2">&quot;round-robin 0&quot;</span>
</span><span class='line'>    rr_min_io 10 <span class="c"># 10-20 Database / 100-512 File server</span>
</span><span class='line'>    rr_weight priorities
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span><span class='line'>
</span><span class='line'>multipaths <span class="o">{</span>
</span><span class='line'>  multipath <span class="o">{</span>
</span><span class='line'>    wwid 36090afffffffffffffffffffffffffff
</span><span class='line'>    <span class="nb">alias </span>u02
</span><span class='line'>  <span class="o">}</span>
</span><span class='line'><span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h4>1.2. Start and test Device Mapper Multipath</h4>

<p>Device Mapper Multipath can be started with the following command
once it has been configured.</p>

<h5>Start multipathd service</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>service multipathd start
</span></code></pre></td></tr></table></div></figure>


<p>You can list the Multipath topology with the following command
to verify everything is working correctly.</p>

<h5>Multipath listing</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>multipath -ll -v2
</span><span class='line'>u02 <span class="o">(</span>36090a04850ec0870d0ba04020000d023<span class="o">)</span> dm-0 EQLOGIC,100E-00
</span><span class='line'><span class="o">[</span><span class="nv">size</span><span class="o">=</span>100G<span class="o">][</span><span class="nv">features</span><span class="o">=</span>0<span class="o">][</span><span class="nv">hwhandler</span><span class="o">=</span>0<span class="o">][</span>rw<span class="o">]</span>
</span><span class='line'><span class="se">\_</span> round-robin 0 <span class="o">[</span><span class="nv">prio</span><span class="o">=</span>2<span class="o">][</span>active<span class="o">]</span>
</span><span class='line'><span class="se">\_</span> 10:0:0:0 sdb 8:16 <span class="o">[</span>active<span class="o">][</span>ready<span class="o">]</span>
</span><span class='line'><span class="se">\_</span> 11:0:0:0 sdc 8:32 <span class="o">[</span>active<span class="o">][</span>ready<span class="o">]</span>
</span></code></pre></td></tr></table></div></figure>


<h4>1.3. Reload udev to test friendly alias names</h4>

<p>Once Multipath has been verified to be working correctly,
you may need to run the following <code>udev</code> command to create
devices with friendly names.  This only applies if you
have chosen to use persistent Multipath binding by defining
<code>alias</code> lines in the <code>multipaths</code> section of <em>multipath.conf</em>.<br/>
Reloading udev will automagically create your aliased devices in the <em>/dev/mapper</em>
folder.</p>

<h5>Reload udev command</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>udevcontrol reload_rules
</span></code></pre></td></tr></table></div></figure>


<p>You may proceed to <code>fdisk</code> and
format the aliased device, just as you would any other SCSI disk
device appearing in the <em>/dev</em> directory.</p>

<h2>VI. Final steps</h2>

<h3>1. Set services to start automatically.</h3>

<p>Once you have everything up and running, with regards to Open-iSCSI
and Device Mapper Multipath, run the following
commands to ensure services get started automatically during
server boot up.</p>

<h4>Set iscsid to start at boot</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chkconfig iscsid on
</span></code></pre></td></tr></table></div></figure>


<h4>Set iscsi to login to target at boot</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chkconfig iscsi on
</span></code></pre></td></tr></table></div></figure>


<h4>Set multipathd to start at boot</h4>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>chkconfig multipathd on
</span></code></pre></td></tr></table></div></figure>


<p>Edit <em>/etc/fstab</em>, and add a line with the <code>_netdev</code> keyword
for all your volumes to be mounted. Using the <code>_netdev</code> keyword
ensures this device will not be mounted before the networking
subsystem has started.</p>

<p>We have observed Open-iSCSI failing both paths temporarily while
updating firmware on the group node.  This could
result in a machine remounting a filesystem in read-only mode
upon error unless an <code>errors=continue</code> option is added to
<em>/etc/fstab</em>.</p>

<p><em>/etc/fstab</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="nv">LABEL</span><span class="o">=</span>/             /       ext3     defaults 1 1
</span><span class='line'><span class="nv">LABEL</span><span class="o">=</span>/u01          /u01    ext3     defaults 1 2
</span><span class='line'>/dev/mapper/u02p1   /u02    ext3     _netdev,defaults,errors<span class="o">=</span><span class="k">continue </span>0 0
</span><span class='line'>tmpfs               /dev/shm  tmpfs  defaults 0 0
</span><span class='line'>devpts              /dev/pts  devpts <span class="nv">gid</span><span class="o">=</span>5,mode<span class="o">=</span>620 0 0
</span><span class='line'>sysfs               /sys    sysfs    defaults 0 0
</span><span class='line'>proc                /proc   proc     defaults 0 0
</span><span class='line'><span class="nv">LABEL</span><span class="o">=</span>SWAP-sda5     swap    swap     defaults 0 0
</span></code></pre></td></tr></table></div></figure>


<h3>2. Final testing</h3>

<h4>2.1. Reboot</h4>

<p>Reboot your server, and make sure everything comes up. The iscsi
initialization script should log the server in to the iSCSI targets.
Multipath should be started, and it should see both of its paths to the iSCSI array. If
everything is working correctly, the <em>fstab</em> entry should automatically
mount any iSCSI volumes.</p>

<h4>2.2. Test your Multipath software</h4>

<p>The easiest way to test your Multipath software is to take down
one of the Ethernet devices manually.  To do this, run the following command.</p>

<h5>Faking network failure</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ifdown eth3
</span></code></pre></td></tr></table></div></figure>


<p>After about 15 seconds you should see something like this in the
messages log.</p>

<h5>Path failure log message</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>kernel: device-mapper: multipath: Failing path X:XX
</span><span class='line'>multipathd: &lt;<span class="nb">alias</span>&gt;: remaining active paths: 1
</span></code></pre></td></tr></table></div></figure>


<p>Then, bring the device back up manually.</p>

<h5>End fake network failure</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>ifup eth3
</span></code></pre></td></tr></table></div></figure>


<p>Again, after about 15 seconds you should see something like this
in the messages log.</p>

<h5>Path resolved log message</h5>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>multipathd: X:XX: reinstated
</span><span class='line'>multipathd: &lt;<span class="nb">alias</span>&gt;: remaining active paths: 2
</span></code></pre></td></tr></table></div></figure>


<p>Repeat this test for every other NIC being used for iSCSI and make
sure every iSCSI Network Interface fails-over from faulty paths,
and reinstate all active iSCSI paths gracefully.</p>

<h2>References and recommended reading</h2>

<p>Aizman, Alex, and Dmitry Yusupov. 2007. Open-iSCSI – RFC3720
architecture and implementation. <em>Open-iSCSI project</em>. <a href="http://www.open-iscsi.org/index.html#docs">http://www.open-iscsi.org/index.html#docs</a>.</p>

<p>Anon. Device-mapper Resource Page. <em>Device-Mapper-Multipath
Project</em>. <a href="http://sources.redhat.com/dm/">http://sources.redhat.com/dm/</a>.</p>

<p>Dell EqualLogic, Inc. 2008. <em>PS Series Array Network Performance
Guidelines</em>. 3rd ed. Nashua, NH: Dell, Inc, June. <a href="http://www.equallogic.com/uploadedfiles/Resources/Tech_Reports/tr-network-guidelines-TR1017.pdf">http://www.equallogic.com/uploadedfiles/Resources/Tech_Reports/tr-network-guidelines-TR1017.pdf</a>.</p>

<p>———. 2009. <em>Red Hat Linux v5.x Software iSCSI Initiator Configuration,
MPIO and tuning Guide</em>. Nashua, NH: Dell, Inc, December. <a href="http://www.equallogic.com/resourcecenter/assetview.aspx?id=8727">http://www.equallogic.com/resourcecenter/assetview.aspx?id=8727</a>.</p>

<p>Red Hat, Inc. 2007. How do I configure the iscsi-initiator in
Red Hat Enterprise Linux 5? <em>Red Hat Knowledgebase</em>. June 25.
<a href="http://access.redhat.com/kb/docs/DOC-6388">https://access.redhat.com/kb/docs/DOC-6388</a>.</p>

<p>———. 2008. How can I improve the failover time of a faulty path
when using device-mapper-multipath over iSCSI? <em>Red Hat Knowledgebase</em>.
October 1. <a href="https://access.redhat.com/kb/docs/DOC-2877">https://access.redhat.com/kb/docs/DOC-2877</a>.</p>

<p>———. 2010a. <em>DM Multipath</em>. <a href="http://www.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/5.5/html/DM_Multipath/index.html">http://www.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/5.5/html/DM_Multipath/index.html</a>.</p>

<p>———. 2010b. Kickstart Installations. In <em>Installing Red Hat
Enterprise Linux 5 for all architectures</em>, Chap. 31. Research
Triangle Park, NC: Red Hat, Inc. <a href="http://www.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/5.5/html/Installation_Guide/index.html">http://www.redhat.com/docs/en-US/Red_Hat_Enterprise_Linux/5.5/html/Installation_Guide/index.html</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2 Cent Tip - Extend (resize) a whole device partition.]]></title>
    <link href="http://atomic-penguin.github.com/blog/2010/09/02/2-cent-tip-extend-resize-a-whole-device-partition/"/>
    <updated>2010-09-02T00:00:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2010/09/02/2-cent-tip-extend-resize-a-whole-device-partition</id>
    <content type="html"><![CDATA[<p>Occasionally I have to resize partitions on iSCSI or Fiber-Channel attached SAN storage.  Both technologies allow you to easily extend the available storage for a host by extending LUNs, or volumes.  A common problem after extending the size of the LUN, or volume, is resizing partitions to fill out the new size.</p>

<p>For the most part, I usually fire up <a href="http://partedmagic.com">PartedMagic</a> and its a snap, even with Fiber-Channel attached enterprise storage.  Once the HBAs (Host Bus Adapters) have been zoned to Fiber-Channel switches, then the HBAs do all the heavy lifting.  In other words on Fiber-Channel, it doesn&#8217;t matter if you&#8217;re using PartedMagic, or <a href="http://www.knopper.net">Knoppix</a>, the server just knows where the storage is and whether it is in an attached state.  The only dependency for this working on a Live boot disk are drivers for the HBA cards.</p>

<!-- more -->


<p>iSCSI is a bit different.  Because, iSCSI relies on commodity Network Interface Cards, this technology is largely implemented in software.  One perceived advantage is iSCSI may seem less complicated to use than Fiber-Channel storage.  Unfortunately, in this case, PartedMagic did not have open-iscsi software, and I could install open-iscsi in the Knoppix Live ramdisk. However, because Knoppix came with an outdated iSCSI kernel module, it was not new enough to inter-operate with the open-iscsi software.</p>

<p>Furthermore, the version of <a href="http://www.gnu.org/software/parted/index.shtml">parted</a> that shipped with RHEL 5 threw an incompatible filesystem error, refusing to modify the filesystem. So, in the end, I twiddled some bits on the partition table with fdisk, and used resize2fs to extend the partition.</p>

<p>Assuming you have a backup of the filesystem you are working on, you can proceed with the following steps to extend a single partition to the end of the extended volume.  If you have multiple partitions on a volume, you may want to stick to more reliable methods of resizing and extending.  If you screw up the cylinder boundaries on a device with multiple partitions, you&#8217;ll definitely lose data.  A single partition, in this example, is a much simpler scenario.</p>

<p>The device name in this example is <code>/dev/mapper/u02</code>, the first partition is <code>/dev/mapper/u02p1</code>:</p>

<p>Run <code>fdisk -l /dev/mapper/u02</code> to get the starting cylinder.</p>

<div class="highlight"><pre><code class="bash">    root@localhost:~# fdisk -l /dev/mapper/u02
    Disk /dev/mapper/u02: 100.9 GB, 108340550042 bytes

    255 heads, 63 sectors/track, 13171 cylinders
    <span class="nv">Units</span> <span class="o">=</span> cylinders of 16065 * <span class="nv">512</span> <span class="o">=</span> 8225280 bytes

              Device Boot      Start         End      Blocks   Id  System
    /dev/mapper/u02p1               1       13171   26450329   83  Linux
</code></pre>
</div>


<p>Reboot the server after extending the volume or LUN on your SAN.  You want to do this before extending the partition in your Operating System.  The Operating System needs to re-read sector 0 on the extended SAN volume, before continuing. Note, that fdisk will report <strong>26109</strong> cylinders instead of <strong>13171</strong>, after rebooting the server.</p>

<p>Next, we will run: <code>fdisk /dev/mapper/u02</code>, and then hit the keys: <code>d, n, p, 1, [enter], [enter], w</code></p>

<div class="highlight"><pre><code class="bash">    root@localhost:~# fdisk /dev/mapper/u02
    WARNING: DOS-compatible mode is deprecated. It<span class="s1">&#39;s strongly recommended to</span>
<span class="s1">             switch off the mode (command &#39;</span>c<span class="s1">&#39;) and change display units to</span>
<span class="s1">             sectors (command &#39;</span>u<span class="err">&#39;</span><span class="o">)</span>.

    Command <span class="o">(</span>m <span class="k">for </span><span class="nb">help</span><span class="o">)</span>: d
    Selected partition 1

    Command <span class="o">(</span>m <span class="k">for </span><span class="nb">help</span><span class="o">)</span>: n
    Command action
       e   extended
       p   primary partition <span class="o">(</span>1-4<span class="o">)</span>
    p
    Partition number <span class="o">(</span>1-4<span class="o">)</span>: 1
    First cylinder <span class="o">(</span>1-26109, default 1<span class="o">)</span>:
    Using default value 1
    Last cylinder, +cylinders or +size<span class="o">{</span>K,M,G<span class="o">}</span> <span class="o">(</span>1-26109, default 26109<span class="o">)</span>:
    Using default value 26109

    Command <span class="o">(</span>m <span class="k">for </span><span class="nb">help</span><span class="o">)</span>: w
    The partition table has been altered!

    Calling ioctl<span class="o">()</span> to re-read partition table.
    Syncing disks.
</code></pre>
</div>


<p>Finally, run <code>resize2fs</code> on <code>/dev/mapper/u02p1</code>. If you are using ext3, you can do an on-line resize while the volume is mounted.  It is probably safest to <code>umount</code> the partition to be re-sized, however.</p>

<div class="highlight"><pre><code class="bash">    root@localhost:~# resize2fs /dev/mapper/u02p1
    resize2fs 1.39 <span class="o">(</span>29-May-2006<span class="o">)</span>
    Filesystem at /dev/mapper/u02p1 is mounted on /u02; on-line resizing required
    Performing an on-line resize of /dev/mapper/u02p1 to 52430127 <span class="o">(</span>4k<span class="o">)</span> blocks.
    The filesystem on /dev/mapper/u02p1 is now 52430127 blocks long.
</code></pre>
</div>


<p>Refer to the <code>resize2fs</code> for more information on the command, and its proper usage.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[2 Cent Tip - Dynamic rdesktop resolution.]]></title>
    <link href="http://atomic-penguin.github.com/blog/2010/06/28/2-cent-tip-dynamic-rdesktop-resolution/"/>
    <updated>2010-06-28T00:00:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2010/06/28/2-cent-tip-dynamic-rdesktop-resolution</id>
    <content type="html"><![CDATA[<p>So occasionally I do have to touch a Windows system, or use a Windows-only management tool (I&#8217;m looking at you VMware).  Not that I have any problem with Microsoft or Windows, I&#8217;m really just more comfortable in a Unix-like environment.  I do use the Open Source <code>rdesktop</code> utility to access Windows machine using version 5.0 of the Remote Desktop Protocol (RDP).</p>

<p>It&#8217;s a handy utility, but I really wish it would give me an appropriate resolution based on the current resolution of my laptop&#8217;s X Windows session.  There is, in fact, a command line flag to alter the geometry of the remote desktop window.  However, typing in <code>rdesktop -g 1280x1024</code> is much more tedious than typing in <code>rdesktop</code> on the command line interface.</p>

<!-- more -->


<p>So the simple solution is to put an alias in the <code>.bashrc</code> file, like so&#8230;</p>

<div class="highlight"><pre><code class="bash">    <span class="c"># ~/.bashrc</span>
    <span class="nv">rdesktop</span><span class="o">=</span><span class="s1">&#39;rdesktop -g 1280x1024&#39;</span>
</code></pre>
</div>


<p>However, on my laptop, the max resolution without an external monitor is 1600x900.  So I still have to override the setting with <code>rdesktop -g 1280x1024</code> on the command line, any time I am running without an external monitor.</p>

<p>Another solution would be to use <code>awk</code> to find a smaller resolution from <code>xrandr</code>, then set that resolution in my <code>rdesktop</code> alias.</p>

<div class="highlight"><pre><code class="bash">    <span class="c"># ~/.bashrc</span>
    <span class="nv">RDESKTOP_SIZE</span><span class="o">=</span><span class="sb">`</span>xrandr | awk <span class="s1">&#39;{getline; getline; getline; print $1; exit;}&#39;</span><span class="sb">`</span>

    <span class="nb">alias </span><span class="nv">rdesktop</span><span class="o">=</span><span class="s1">&#39;rdesktop -g $RDESKTOP_SIZE&#39;</span>
</code></pre>
</div>


<p>This <code>awk</code> command will skip the first three lines, from the xrandr output.  That is two header lines, and the maximum resolution on the following line, which we&#8217;ll skip.  I&#8217;ll take the next highest resolution and set that in the variable <code>$RDESKTOP_SIZE</code>.  Finally, I&#8217;ll use the variable <code>$RDESKTOP_SIZE</code> with the <code>-g</code> switch in <code>rdesktop</code> to properly set my alias.</p>

<p>Let us say you have two big monitors plugged into a port replicator.  Perhaps you only want the <code>rdesktop</code> window to cover part of one screen.  The following code will keep my <code>rdesktop</code> window smaller than one of the 1920x1200 screens on a spanned 3840x1200 resolution.</p>

<div class="highlight"><pre><code class="bash">    <span class="c"># ~/.bashrc</span>
    <span class="nv">RDESKTOP_SIZE</span><span class="o">=</span><span class="sb">`</span>xrandr | awk <span class="s1">&#39;{getline; getline; getline; print $1; exit;}&#39;</span><span class="sb">`</span>

    <span class="k">if</span> <span class="o">[</span> <span class="nv">$RDESKTOP_SIZE</span> <span class="o">==</span> <span class="s2">&quot;3840x1200&quot;</span> <span class="o">]</span>; <span class="k">then</span>
<span class="k">        </span><span class="nv">RDESKTOP_SIZE</span><span class="o">=</span><span class="s2">&quot;1820x1100&quot;</span>
    <span class="k">fi</span>

<span class="k">    </span><span class="nb">alias </span><span class="nv">rdesktop</span><span class="o">=</span><span class="s1">&#39;rdesktop -g $RDESKTOP_SIZE&#39;</span>
</code></pre>
</div>


<p>In other words, if I have two monitors at 1920x1200 each, their combined resolution is reported by <code>xrandr</code> as 3840x1200.  I want to override the detected resolution to 100 pixels less than the resolution on one screen.  Therefore I set the <code>$RDESKTOP_SIZE</code> variable to 1820x1100, before setting my <code>rdesktop</code> alias in <code>.bashrc</code>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ohio Linuxfest 2009 - How I learned to stop worrying, and love PXE booting]]></title>
    <link href="http://atomic-penguin.github.com/blog/2009/09/26/Ohio-Linuxfest-How-I-learned-to-stop-worrying-and-love-PXE-booting/"/>
    <updated>2009-09-26T00:00:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2009/09/26/Ohio-Linuxfest-How-I-learned-to-stop-worrying-and-love-PXE-booting</id>
    <content type="html"><![CDATA[<p>These are my presentation slides for the 2009 Ohio Linuxfest.  I gave a talk on the topic of network and multi-booting with Syslinux and configuring systems with Kickstart.</p>

<ul>
<li><a href="http://syslinux.zytor.com">Syslinux</a> website.</li>
<li>How I learned to stop worrying, and love PXE booting <a href="http://atomic-penguin.github.com/papers/olf-2009-pxe-booting">slides</a>.</li>
<li>Presentation <a href="http://ia700404.us.archive.org/15/items/OhioLinuxfest2009/43-Eric_Wolfe-How_I_Learned_to_Stop_Worrying_and_Love_PXE_Booting_vbr.mp3">audio</a> on Archive.org</li>
<li>Linux server installed with Oracle pre-requisites, in 15 minutes or less, on <a href="http://www.youtube.com/watch?v=h_oHe-WDE9U">Youtube</a>.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ohio Linuxfest 2008 - Square Pegs in Round Holes, Linux in a Windows World]]></title>
    <link href="http://atomic-penguin.github.com/blog/2008/10/11/Ohio-Linuxfest-Square-Pegs-in-Round-Holes-Linux-in-a-Windows-World/"/>
    <updated>2008-10-11T00:00:00-04:00</updated>
    <id>http://atomic-penguin.github.com/blog/2008/10/11/Ohio-Linuxfest-Square-Pegs-in-Round-Holes-Linux-in-a-Windows-World</id>
    <content type="html"><![CDATA[<p>These are my presentation slides for the 2008 Ohio Linuxfest.  I gave a well recieved talk on the topic of Windows, and Active Directory, Linux integration using Samba.  My <a href="https://atomic-penguin.github.com/cookbook-krb5">krb5</a> handles the krb5.conf and pam configurations outlined in the examples below.</p>

<!-- more -->


<ul>
<li><a href="http://atomic-penguin.github.com/papers/Square_Pegs_in_Round_Holes_Linux_in_a_Windows.ppt">Slides</a></li>
<li><a href="https://github.com/atomic-penguin/dnsnarf">DNSnarf</a>.  This code is deprecated now in favor of the bind::ldap2zone recipe, included in the Opscode Chef cookbook, <a href="https://atomic-penguin.github.com/cookbook-bind">bind</a></li>
</ul>


<p>Example config files</p>

<h2>/etc/krb5.conf</h2>

<p>Example Kerberos 5.0 configuration for Active Directory domain CONTOSO.COM.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># Example Kerberos configuration for CONTOSO.COM kerberos realm</span>
</span><span class='line'><span class="c"># kdc01.contoso.com and kdc03.contoso.com are Windows domain controllers</span>
</span><span class='line'><span class="c"># for this environment.</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>logging<span class="o">]</span>
</span><span class='line'> <span class="nv">default</span> <span class="o">=</span> FILE:/var/log/krb5libs.log
</span><span class='line'> <span class="nv">kdc</span> <span class="o">=</span> FILE:/var/log/krb5kdc.log
</span><span class='line'> <span class="nv">admin_server</span> <span class="o">=</span> FILE:/var/log/kadmind.log
</span><span class='line'>
</span><span class='line'><span class="o">[</span>libdefaults<span class="o">]</span>
</span><span class='line'> <span class="nv">default_realm</span> <span class="o">=</span> CONTOSO.COM
</span><span class='line'> <span class="nv">dns_lookup_realm</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="nb"> </span><span class="nv">dns_lookup_kdc</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nb"> </span><span class="nv">ticket_lifetime</span> <span class="o">=</span> 24h
</span><span class='line'> <span class="nv">forwardable</span> <span class="o">=</span> yes
</span><span class='line'>
</span><span class='line'><span class="o">[</span>realms<span class="o">]</span>
</span><span class='line'> CONTOSO.COM <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>  <span class="nv">kdc</span> <span class="o">=</span> kdc01.contoso.com
</span><span class='line'>  <span class="nv">kdc</span> <span class="o">=</span> kdc03.contoso.com
</span><span class='line'>  <span class="nv">admin_server</span> <span class="o">=</span> kdc01.contoso.com
</span><span class='line'> <span class="o">}</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>domain_realm<span class="o">]</span>
</span><span class='line'> contoso.com <span class="o">=</span> CONTOSO.COM
</span><span class='line'> .contoso.com <span class="o">=</span> CONTOSO.COM
</span><span class='line'>
</span><span class='line'><span class="o">[</span>appdefaults<span class="o">]</span>
</span><span class='line'> <span class="nv">pam</span> <span class="o">=</span> <span class="o">{</span>
</span><span class='line'>   <span class="nv">debug</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'><span class="nb">   </span><span class="nv">ticket_lifetime</span> <span class="o">=</span> 36000
</span><span class='line'>   <span class="nv">renew_lifetime</span> <span class="o">=</span> 36000
</span><span class='line'>   <span class="nv">forwardable</span> <span class="o">=</span> <span class="nb">true</span>
</span><span class='line'><span class="nb">   </span><span class="nv">krb4_convert</span> <span class="o">=</span> <span class="nb">false</span>
</span><span class='line'> <span class="o">}</span>
</span></code></pre></td></tr></table></div></figure>


<h2>/etc/samba/smb.conf</h2>

<p>Example Samba 3 configuration for Active Directory/Winbind integration</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># This is an example of how to setup Samba as a domain member </span>
</span><span class='line'><span class="c"># of CONTOSO.COM to provide file services.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># The winbind method used in this example works much like a Windows</span>
</span><span class='line'><span class="c"># Domain Member file server in resolving usernames and groups over RPC.</span>
</span><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># idmap provides predictable UID and GID</span>
</span><span class='line'><span class="c"># generation based on the user&#39;s domain SID number</span>
</span><span class='line'>
</span><span class='line'><span class="o">[</span>global<span class="o">]</span>
</span><span class='line'>unix <span class="nv">charset</span> <span class="o">=</span> LOCALE
</span><span class='line'><span class="nv">workgroup</span> <span class="o">=</span> CONTOSO
</span><span class='line'><span class="nv">realm</span> <span class="o">=</span> CONTOSO.COM
</span><span class='line'>server <span class="nv">string</span> <span class="o">=</span> Contoso File Server
</span><span class='line'><span class="nv">security</span> <span class="o">=</span> ADS
</span><span class='line'>allow trusted <span class="nv">domains</span> <span class="o">=</span> no
</span><span class='line'>log <span class="nv">level</span> <span class="o">=</span> 1
</span><span class='line'>log <span class="nv">file</span> <span class="o">=</span> /var/log/samba/%m.log
</span><span class='line'>max log <span class="nv">size</span> <span class="o">=</span> 50
</span><span class='line'>idmap <span class="nv">backend</span> <span class="o">=</span> rid:CONTOSO<span class="o">=</span>1000-1000000
</span><span class='line'>idmap <span class="nv">uid</span> <span class="o">=</span> 1000-1000000
</span><span class='line'>idmap <span class="nv">gid</span> <span class="o">=</span> 1000-1000000
</span><span class='line'>winbind cache <span class="nb">time</span> <span class="o">=</span> 3600
</span><span class='line'>winbind enum <span class="nv">groups</span> <span class="o">=</span> yes
</span><span class='line'>winbind use default <span class="nv">domain</span> <span class="o">=</span> yes
</span><span class='line'>winbind normalize <span class="nv">names</span> <span class="o">=</span> yes
</span><span class='line'>admin <span class="nv">users</span> <span class="o">=</span> @CONTOSO<span class="se">\d</span>omain_admins
</span><span class='line'>map acl <span class="nv">inherit</span> <span class="o">=</span> yes
</span><span class='line'>disable <span class="nv">netbios</span> <span class="o">=</span> no
</span></code></pre></td></tr></table></div></figure>


<h2>/etc/httpd/conf.d/auth_kerb.conf</h2>

<p>Example mod_auth_kerb configuration file for Apache2 authentication against Active Directory.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># This is an example of how to setup Kerberos</span>
</span><span class='line'><span class="c"># authentication in Apache against CONTOSO.COM and</span>
</span><span class='line'><span class="c"># SUBDOMAIN.CONTOSO.COM.  The end result works much</span>
</span><span class='line'><span class="c"># like Windows Integrated Authentication.</span>
</span><span class='line'>
</span><span class='line'><span class="c"># Load the module into Apache</span>
</span><span class='line'>LoadModule auth_kerb_module modules/mod_auth_kerb.so
</span><span class='line'>
</span><span class='line'><span class="c"># Directory to protect with Kerberos authentication</span>
</span><span class='line'>&lt;Location /path/to/directory&gt;
</span><span class='line'>  AuthType Kerberos
</span><span class='line'>  AuthName <span class="s2">&quot;Contoso Login&quot;</span>
</span><span class='line'>  KrbMethodNegotiate Off
</span><span class='line'>  KrbMethodK5Passwd On
</span><span class='line'>  KrbSaveCredentials On
</span><span class='line'>  KrbVerifyKDC Off
</span><span class='line'>  KrbAuthRealms CONTOSO.COM SUBDOMAIN.CONTOSO.COM
</span><span class='line'>  Krb5KeyTab /etc/httpd/conf.d/auth_kerb.keytab
</span><span class='line'>  Require valid-user
</span><span class='line'>&lt;/Location&gt;
</span></code></pre></td></tr></table></div></figure>


<h2>/etc/httpd/conf.d/auth_kerb.keytab</h2>

<p>Example mod_auth_kerb keytabl for Apache2 authentication against Active Directory.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># This is an example of how to setup Kerberos</span>
</span><span class='line'><span class="c"># authentication in Apache against CONTOSO.COM and</span>
</span><span class='line'><span class="c"># SUBDOMAIN.CONTOSO.COM.  The end result works much</span>
</span><span class='line'><span class="c"># like Windows Integrated Authentication.</span>
</span><span class='line'>
</span><span class='line'>HTTP/webserv1.contoso.com@CONTOSO.COM
</span><span class='line'>HTTP/webserv1.contoso.com@SUBDOMAIN.CONTOSO.COM
</span></code></pre></td></tr></table></div></figure>


<h2>/etc/pam.d/system-auth</h2>

<p>Example PAM configuration file for Kerberos 5 authentication against Active Directory Domain.</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'><span class="c">#</span>
</span><span class='line'><span class="c"># This file contains the primary system-authentication rules allowing</span>
</span><span class='line'><span class="c"># Kerberos authentication with PAM integrated services such as SSH.</span>
</span><span class='line'><span class="c"># Also configured in this example:</span>
</span><span class='line'><span class="c"># * md5 passwords</span>
</span><span class='line'><span class="c"># * shadow password file</span>
</span><span class='line'><span class="c"># * local authentication, in addition to Kerberos</span>
</span><span class='line'>
</span><span class='line'><span class="c">#%PAM-1.0</span>
</span><span class='line'><span class="c"># This file is auto-generated.</span>
</span><span class='line'><span class="c"># User changes will be destroyed the next time authconfig is run.</span>
</span><span class='line'>auth        required      pam_env.so
</span><span class='line'>auth        sufficient    pam_unix.so nullok try_first_pass
</span><span class='line'>auth        requisite     pam_succeed_if.so uid &gt;<span class="o">=</span> 500 quiet
</span><span class='line'>auth        sufficient    pam_krb5.so use_first_pass
</span><span class='line'>auth        required      pam_deny.so
</span><span class='line'>
</span><span class='line'>account     required      pam_unix.so broken_shadow
</span><span class='line'>account     sufficient    pam_localuser.so
</span><span class='line'>account     sufficient    pam_succeed_if.so uid &lt; 500 quiet
</span><span class='line'>account     <span class="o">[</span><span class="nv">default</span><span class="o">=</span>bad <span class="nv">success</span><span class="o">=</span>ok <span class="nv">user_unknown</span><span class="o">=</span>ignore<span class="o">]</span> pam_krb5.so
</span><span class='line'>account     required      pam_permit.so
</span><span class='line'>
</span><span class='line'>password    requisite     pam_cracklib.so try_first_pass <span class="nv">retry</span><span class="o">=</span>3
</span><span class='line'>password    sufficient    pam_unix.so md5 shadow nullok try_first_pass use_authtok
</span><span class='line'>password    sufficient    pam_krb5.so use_authtok
</span><span class='line'>password    required      pam_deny.so
</span><span class='line'>
</span><span class='line'>session     optional      pam_keyinit.so revoke
</span><span class='line'>session     required      pam_limits.so
</span><span class='line'>session     <span class="o">[</span><span class="nv">success</span><span class="o">=</span>1 <span class="nv">default</span><span class="o">=</span>ignore<span class="o">]</span> pam_succeed_if.so service in crond quiet use_uid
</span><span class='line'>session     required      pam_unix.so
</span><span class='line'>session     optional      pam_krb5.so
</span></code></pre></td></tr></table></div></figure>

]]></content>
  </entry>
  
</feed>
